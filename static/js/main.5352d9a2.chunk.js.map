{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Sweet.js","components/SweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Message.js","components/Router.js","components/App.js","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","password","loginInputs","setLoginInputs","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","errorMessage","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","marginLeft","faGithub","Sweet","sweetObj","isOwner","userObj","editing","setEditing","text","newSweet","setNewSweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","e","updateDoc","autoFocus","fontWeight","marginRight","displayName","fontSize","month","Date","createdAt","getMonth","date","getDate","getCreatedAt","faTrash","faPencilAlt","alt","src","SweetFactory","sweet","setSweet","attachment","setAttachment","fileRef","uid","uuidv4","uploadString","uploadFile","getDownloadURL","now","creatorId","addDoc","collection","maxLength","onsubmit","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","sweets","setSweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","snapshot","sweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","faHome","activeClassName","flexDirection","alignItems","faUser","faEnvelope","faEllipsisH","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","currentUser","then","catch","signOut","push","Message","userName","open","setOpen","msg","setMsg","msgArr","onOpen","padding","Math","floor","random","length","AppRouter","isLoggedIn","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5352d9a2.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from 'firebase/auth';\r\n\r\nconst AuthForm = () => {\r\n  const [loginInputs, setLoginInputs] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const { email, password } = loginInputs;\r\n  const [error, setError] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setLoginInputs({\r\n      ...loginInputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create newAccount\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        // log in\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      console.log('Auth data', data);\r\n    } catch (error) {\r\n      // const errorCode = error.code;\r\n      const errorMessage = error.message;\r\n      setError(errorMessage);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? 'Create Account' : 'Sign In'}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Sign In' : 'Create Account'}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from 'react';\r\nimport { authService } from 'fbase';\r\nimport {\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n} from 'firebase/auth';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async ({ target: { name } }) => {\r\n    let provider;\r\n    try {\r\n      if (name === 'google') {\r\n        provider = new GoogleAuthProvider();\r\n        await signInWithPopup(authService, provider);\r\n        // const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      } else if (name === 'github') {\r\n        provider = new GithubAuthProvider();\r\n        await signInWithPopup(authService, provider);\r\n        // const credential = GithubAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#9775fa'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google{' '}\r\n          <FontAwesomeIcon\r\n            icon={faGoogle}\r\n            color={'#fff'}\r\n            style={{ marginLeft: 2 }}\r\n          />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github{' '}\r\n          <FontAwesomeIcon\r\n            icon={faGithub}\r\n            color={'#fff'}\r\n            style={{ marginLeft: 2 }}\r\n          />\r\n        </button>\r\n      </div>\r\n    </div>\r\n    // <div>\r\n    //   <AuthForm />\r\n    //   <div>\r\n    //     <button onClick={onSocialClick} name=\"google\">\r\n    //       Continue with Google\r\n    //     </button>\r\n    //     <button onClick={onSocialClick} name=\"github\">\r\n    //       Continue with Github\r\n    //     </button>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\r\nimport { ref, deleteObject } from '@firebase/storage';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Sweet = ({ sweetObj, isOwner, userObj }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newSweet, setNewSweet] = useState(sweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this sweet?');\r\n    // console.log(ok);\r\n    if (ok) {\r\n      // delete sweet\r\n      // await deleteDoc(doc(dbService, 'sweets', sweetObj.id));\r\n      await deleteDoc(doc(dbService, `sweets/${sweetObj.id}`));\r\n      await deleteDoc(doc(dbService, `sweets/${sweetObj.id}`));\r\n      await deleteObject(ref(storageService, sweetObj.attachmentUrl));\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('sweetObj', sweetObj, '/ newSweet', newSweet);\r\n    await updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n      text: newSweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = ({ target: { value } }) => setNewSweet(value);\r\n\r\n  const getCreatedAt = () => {\r\n    const month = new Date(sweetObj.createdAt).getMonth() + 1;\r\n    const date = new Date(sweetObj.createdAt).getDate();\r\n    return `${month}.${date}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"sweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container sweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your sweet\"\r\n              value={newSweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Sweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"hello\">\r\n            <div className=\"info\">\r\n              <span style={{ fontWeight: 'bold', marginRight: 4 }}>\r\n                {userObj.displayName || '♥'}\r\n              </span>\r\n              <span\r\n                style={{\r\n                  color: 'gray',\r\n                  fontSize: 10,\r\n                  fontWeight: 400,\r\n                }}\r\n              >\r\n                {getCreatedAt()}\r\n              </span>\r\n            </div>\r\n            {isOwner && (\r\n              <div className=\"sweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <span className=\"sweet__text\">{sweetObj.text}</span>\r\n          {sweetObj.attachmentUrl && (\r\n            <img alt=\"img\" src={sweetObj.attachmentUrl} />\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sweet;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { addDoc, collection } from 'firebase/firestore';\r\nimport { ref, uploadString, getDownloadURL } from '@firebase/storage';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SweetFactory = ({ userObj }) => {\r\n  const [sweet, setSweet] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n\r\n  const onSubmit = async (e) => {\r\n    if (sweet === '') {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      // 파일 경로 참조 만들기\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      // storage 참조 경로로 파일 업로드 하기\r\n      const uploadFile = await uploadString(fileRef, attachment, 'data_url');\r\n      console.log(uploadFile);\r\n      // storage에 있는 파일 URL로 다운로드 받기\r\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n    }\r\n\r\n    // 트윗할 때, 메시지와 사진도 같이 firestore에 생성\r\n    const sweetObj = {\r\n      text: sweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await addDoc(collection(dbService, 'sweets'), sweetObj);\r\n    setSweet('');\r\n    setAttachment('');\r\n\r\n    // try {\r\n    //   const docRef = await addDoc(collection(dbService, 'sweets'), {\r\n    //     text: sweet,\r\n    //     createdAt: Date.now(),\r\n    //     creatorId: userObj.uid,\r\n    //   });\r\n    //   console.log('Document written with ID: ', docRef.id);\r\n    // } catch (error) {\r\n    //   console.error('Error adding document: ', error);\r\n    // }\r\n    // setSweet('');\r\n  };\r\n\r\n  const onChange = ({ target: { value } }) => {\r\n    setSweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader(); // fileReader API 파일 이름을 읽음\r\n    reader.onloadend = (finishedEvent) => {\r\n      // console.log('finishedEvent', finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment('');\r\n\r\n  //  <form onSubmit={onSubmit} className=\"factoryForm\">\r\n  //     <div>\r\n  //       <input\r\n  //         className=\"factoryInput__input\"\r\n  //         value={sweet}\r\n  //         onChange={onChange}\r\n  //         type=\"text\"\r\n  //         placeholder=\"What's on your mind\"\r\n  //         maxLength={120}\r\n  //       />\r\n  //       <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n  //       <input type=\"submit\" value=\"Sweet\" />\r\n  //     </div>\r\n  //     {attachment && (\r\n  //       <div>\r\n  //         <img src={attachment} alt=\"imgs\" width=\"50px\" height=\"50px\" />\r\n  //         <button onClick={onClearAttachment}>Clear</button>\r\n  //       </div>\r\n  //     )}\r\n  //   </form>\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={sweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What kind of sweet thoughts are you having?\"\r\n          maxLength={120}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"&rarr;\"\r\n          className=\"factoryInput__arrow\"\r\n          onSubmit={onsubmit}\r\n        />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            alt=\"img\"\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SweetFactory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n} from 'firebase/firestore';\r\nimport Sweet from 'components/Sweet';\r\nimport SweetFactory from 'components/SweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [sweets, setSweets] = useState([]);\r\n\r\n  // 구식방법/오래된 방식이다(X)\r\n  // 오래된 데이터를 가져온다.새로 생성 / 변경된 데이터는 새로고침해야 반영된다.\r\n  // const getSweets = async () => {\r\n  //   const dbSweets = await getDocs(collection(dbService, 'sweets'));\r\n  //   // console.log(dbSweets);\r\n  //   dbSweets.forEach((doc) => {\r\n  //     // console.log(`${doc.id} => ${doc.data()}`);\r\n  //     const sweetObject = {\r\n  //       ...doc.data(),\r\n  //       id: doc.id,\r\n  //     };<div className=\"container\">\r\n  //     // set에 값 대신 함수 전달 시 이전 값에 접근 가능\r\n  //     setSweets((prev) => [sweetObject, ...prev]);\r\n  //   });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    // onSnapshot은 데이터베이스의 변화를 실시간으로 알려주는 기능\r\n    // 실시간으로 데이터를 데이터베이스에서 가져오기(쿼리 스냅샷 차이)\r\n    // snapshot은 우리가 가진 query와 같은 것 docs를 갖고 있음\r\n    const q = query(\r\n      collection(getFirestore(), 'sweets'),\r\n      // where('text', '==', 'hehe') // where뿐만아니라 각종 조건 이 영역에 때려부우면 됨\r\n      orderBy('createdAt', 'desc')\r\n    );\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      // console.log('something happened-read, delete, update..');\r\n      // map은 rerender하지 않음?\r\n      const sweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      // console.log('sweetArray', sweetArray);\r\n      setSweets(sweetArray);\r\n      // console.log('Current sweets in CA: ', sweetArray);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <SweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {sweets.map((sweet) => (\r\n          <Sweet\r\n            key={sweet.id}\r\n            userObj={userObj}\r\n            sweetObj={sweet}\r\n            isOwner={sweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n  faEllipsisH,\r\n  faEnvelope,\r\n  faHome,\r\n  faUser,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      {/* <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}> */}\r\n      <ul style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <li className=\"logo\">\r\n          <NavLink to=\"/\">\r\n            <FontAwesomeIcon icon={faTwitter} size=\"2x\" color=\"#E05D5D\" />\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"home\">\r\n          <NavLink to=\"/\">\r\n            <FontAwesomeIcon icon={faHome} size=\"2x\" color=\"#E05D5D\" />\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"profile\">\r\n          <NavLink\r\n            activeClassName=\"\"\r\n            to=\"/profile\"\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              fontSize: 12,\r\n              color: '#E05D5D',\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName ? `${userObj.displayName}` : '♥'}\r\n            </span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"msg\">\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            to=\"/msg\"\r\n            style={{\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center',\r\n              fontSize: 12,\r\n              color: '#E05D5D',\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faEnvelope} size=\"2x\" color=\"#E05D5D\" />\r\n            <span style={{ marginTop: 10 }}>{'+1'}</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"more\">\r\n          <FontAwesomeIcon icon={faEllipsisH} size=\"2x\" color=\"#E05D5D\" />\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { authService } from 'fbase';\r\nimport { signOut, updateProfile } from '@firebase/auth';\r\n// import { collection, getDocs, orderBy, query, where } from '@firebase/firestore';\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    signOut(authService); // auth.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const onChange = ({ target: { value } }) => {\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  // updateProfile 2 update - displayName, photoURL\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n        // photoURL: 'https://example.com/jane-q-user/profile.jpg',\r\n      })\r\n        .then(() => {\r\n          // Profile updated!\r\n          refreshUser();\r\n        })\r\n        .catch((error) => {\r\n          // An error occurred\r\n        });\r\n    }\r\n  };\r\n\r\n  // const getMySweets = async () => {\r\n  //   const q = query(\r\n  //     collection(dbService, 'sweets'),\r\n  //     where('creatorId', '==', userObj.uid) // 필터링\r\n  //   );\r\n  //   const querySnapshot = await getDocs(q);\r\n  //   querySnapshot.forEach((doc) => {\r\n  //     console.log(doc.id, ' => ', doc.data());\r\n  //   });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getMySweets();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    // <>\r\n    //   <form onSubmit={onSubmit}>\r\n    //     <input\r\n    //       onChange={onChange}\r\n    //       type=\"test\"\r\n    //       placeholder=\"Display name\"\r\n    //       value={newDisplayName}\r\n    //     />\r\n    //     <input type=\"submit\" value=\"Updata Profile\" />\r\n    //   </form>\r\n    //   <button onClick={onLogOutClick}>Log Out</button>\r\n    // </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\n\r\nconst Message = ({ userName }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [msg, setMsg] = useState(`${userName} click me :)`);\r\n\r\n  const msgArr = [\r\n    \"Don't dwell on the past\",\r\n    'Believe in yourself',\r\n    'Seize the day',\r\n    'You only live once',\r\n    'Past is just past',\r\n    'Love yourself',\r\n    \"Don't dream, Be it\",\r\n    'No sweat, No sweet',\r\n    'Be brave',\r\n    'Good luck',\r\n    'Hang in there',\r\n    'Live positive',\r\n    'Time is gold',\r\n    'You deserve to be loved',\r\n    'Love what you do',\r\n    'Live live there is no tommorrow',\r\n    'Time waites for no one',\r\n    \"Don't waste your youth\",\r\n    'Life is all about timing',\r\n    'Rome is not built in a day',\r\n  ];\r\n\r\n  const onOpen = () => setOpen(!open);\r\n\r\n  const randomMsg = () =>\r\n    setMsg(msgArr[Math.floor(Math.random() * msgArr.length)]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"msg-container\">\r\n        <div className=\"msgh\">\r\n          <span>Message</span>\r\n        </div>\r\n\r\n        {open ? (\r\n          <div className=\"msgs\" onClick={onOpen}>\r\n            <div className=\"chat\">\r\n              <div style={{ fontWeight: 'bold', marginBottom: 12 }}>\r\n                <FontAwesomeIcon icon={faUser} /> {'user'}\r\n              </div>\r\n              <span>{msg}</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"back\" onClick={onOpen}>\r\n              {open ? '' : '←'}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                padding: 20,\r\n              }}\r\n            >\r\n              <div style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faUser} color=\"black\" />\r\n              </div>\r\n              <div className=\"mymsg\" onClick={randomMsg}>\r\n                <span>{msg}</span>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\nimport Message from 'components/Message';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  // <Route exact path=\"/\">\r\n  //   {isLoggedIn ? <Home /> : <Auth />}\r\n  // </Route>;\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <>\r\n          {isLoggedIn && <Navigation userObj={userObj} />}\r\n          {isLoggedIn ? (\r\n            <div\r\n              style={{\r\n                width: '100%',\r\n                margin: '0 auto',\r\n                // marginTop: 80,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n              </Route>\r\n              <Route exact path=\"/msg\">\r\n                <Message userName={userObj.displayName} />\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Auth />\r\n              </Route>\r\n              {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n            </>\r\n          )}\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from './Router';\nimport { authService } from 'fbase';\nimport { onAuthStateChanged } from 'firebase/auth';\n\nfunction App() {\n  // console.log('유저의 로그인 여부', authService.currentUser);\n  const [init, setInit] = useState(false); // flase면 router 숨기기\n  // userObj의 제일 처음 출발점!\n  const [userObj, setUserObj] = useState(null);\n\n  // 처음 시작할 때. 컴포넌트가 mount 될 때\n  useEffect(() => {\n    // 사용자의 로그인 상태의 변화를 관찰하는 관찰자 추가\n    onAuthStateChanged(authService, (user) => {\n      // console.log('App user', user);\n      if (user) {\n        // setUserObj(user);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        // User is signed out\n        console.log('not user', user);\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  // firebase의 정보를 가지고 react를 업데이트\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    console.log(authService.currentUser.displayName);\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        <div>Initializing....</div>\n      )}\n\n      {/* <footer>&copy; {new Date().getFullYear()} Switter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport fbase from './fbase';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}