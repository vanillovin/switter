{"version":3,"sources":["services/firebase/fbase.js","services/users.js","components/auth/AuthForm.jsx","routes/Auth.jsx","utils.js","hooks/useInput.js","components/sweet/SweetEdit.jsx","hooks/useToggle.js","components/sweet/SweetActionButtons.jsx","hooks/useModal.js","services/sweets.js","components/sweet/SweetNestedComments.jsx","contexts/UsersProfileContext.jsx","components/sweet/SweetComment.jsx","components/sweet/SweetComments.jsx","components/sweet/Sweet.jsx","components/sweet/SweetFactory.jsx","components/Loading.jsx","routes/Home.jsx","components/Navigation.jsx","components/profile/ProfileEdit.jsx","components/NotFoundPage.jsx","components/modal/ModalPortal.jsx","components/modal/Modal.jsx","contexts/ModalContext.jsx","routes/Profile.jsx","routes/Message.jsx","routes/SweetDetail.jsx","components/Router.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","updateCurUserProfile","userObj","updateProfile","currentUser","updateUsersProfilePhoto","uid","url","usersRef","collection","updateDoc","doc","updateUsersProfileData","defaultProfileURL","initialUserObj","email","photoURL","aboutMe","displayName","commentedSweets","writtenSweets","likesSweets","AuthForm","useState","password","loginInputs","setLoginInputs","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","then","res","user","catch","err","console","log","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","darkMode","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","marginLeft","faGithub","shareSns","sns","id","pageUrl","window","open","displayedAt","createdAt","seconds","Date","minutes","Math","floor","hours","days","weeks","months","years","useInput","initialValue","setValue","onChangeValue","e","onClearValue","val","SweetEdit","text","closeEdit","autoFocus","maxLength","useToggle","toggleRef","toggle","setToggle","clickToggleOutside","current","contains","useEffect","document","addEventListener","SweetActionButtons","likes","liked","comments","handleLikeSweet","handleAddComment","useRef","onToggleChange","title","length","ref","sweetId","navigator","clipboard","writeText","alert","useModal","modal","setModal","modalContent","setModalContent","handleModal","content","openModal","closeModal","fetchSweets","snapshot","onSnapshot","query","orderBy","fetchSweet","createSweet","sweetObj","addDoc","imageFileUploadAndDownload","attachment","fileRef","uuidv4","uploadString","uploadFile","getDownloadURL","profileImageFileUploadAndDownload","fileDataUrl","fileReference","uploadTask","deleteStorageFile","fileUrl","deleteObject","deleteSweet","sid","deleteDoc","likeSweet","arrayRemove","arrayUnion","updateSweet","addSweetComment","commentObj","updateSweetNestedComment","deleteSweetComment","cid","filter","comment","SweetNestedComments","nestedComments","isOwner","handleAddNestedComment","handleDeleteNestedComment","map","UsersProfileContext","createContext","UsersProfileProvider","children","loading","data","usersProfileData","setUsersProfileData","usersProfilePhoto","setUsersProfilePhoto","fetchUsersProfileData","Provider","SweetComment","handleDeleteComment","useContext","profileData","faTimes","Set","has","newComments","pComment","lSweet","sort","b","nestedComment","commentId","now","confirm","nComment","cSweet","SweetComments","onHandleAddComment","marginTop","Sweet","sweet","history","useHistory","editing","setEditing","addComment","setAddComment","creatorId","profilePhoto","goToSweetDetailPage","currentTarget","push","wSweet","alt","src","dName","attachmentUrl","clearText","s","SweetFactory","setAttachment","onClearAttachment","onsubmit","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","opacity","backgroundImage","Loading","initialSweets","Home","sweets","setSweets","docs","Navigation","onDarkMode","display","justifyContent","to","activeClassName","faHome","faUser","faEnvelope","faMoon","faEllipsisH","ProfileEdit","onCloseEdit","setFileDataUrl","newDisplayName","newAboutMe","onChangeAboutMe","handelSubmit","fileReader","undefined","onload","background","NotFoundPage","ModalPortal","modalElement","getElementById","reactDom","createPortal","Modal","el","ModalContext","ModalProvider","Profile","refreshUser","params","useParams","editProfile","setEditProfile","fileDownloadUrl","split","signOut","msgArr","Message","userName","setOpen","msg","setMsg","onOpen","fontWeight","alignItems","padding","marginRight","random","regex","initialSweet","SweetDetail","sweetData","setSweetData","topToggleRef","topToggle","onTopToggleChange","goBack","replace","includes","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","setDarkMode","onAuthStateChanged","args","Boolean","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49f559d1.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst authService = getAuth();\r\nconst dbService = getFirestore();\r\nconst storageService = getStorage();\r\n\r\nexport { firebaseApp, authService, dbService, storageService };\r\n","import { updateProfile } from 'firebase/auth';\r\nimport { collection, doc, onSnapshot, updateDoc } from 'firebase/firestore';\r\nimport { authService, dbService } from 'services/firebase/fbase';\r\n\r\n// Users Manage\r\nexport const updateCurUserProfile = (userObj) => {\r\n  return updateProfile(authService.currentUser, userObj);\r\n};\r\n\r\n// Users Profile Photo\r\nexport const updateAllUsersProfilePhoto = (obj) => {\r\n  const usersRef = collection(dbService, 'users');\r\n  return updateDoc(doc(usersRef, 'profilePhoto'), obj);\r\n};\r\n\r\nexport const fetchUsersProfilePhoto = (snapshot, error) => {\r\n  return onSnapshot(doc(dbService, 'users', 'profilePhoto'), snapshot, error);\r\n};\r\n\r\n// Users Profile Data\r\nexport const updateAllUsersProfileData = (obj) => {\r\n  const usersRef = collection(dbService, 'users');\r\n  return updateDoc(doc(usersRef, 'profileData'), obj);\r\n};\r\n\r\nexport const fetchUsersProfileData = (snapshot, error) => {\r\n  return onSnapshot(doc(dbService, 'users', 'profileData'), snapshot, error);\r\n};\r\n\r\nexport const updateUsersProfilePhoto = (uid, url) => {\r\n  const usersRef = collection(dbService, 'users');\r\n  return updateDoc(doc(usersRef, 'profilePhoto'), {\r\n    [uid]: url,\r\n  });\r\n};\r\n\r\nexport const updateUsersProfileData = (uid, userObj) => {\r\n  const usersRef = collection(dbService, 'users');\r\n  return updateDoc(doc(usersRef, 'profileData'), {\r\n    [uid]: userObj,\r\n  });\r\n};\r\n","import React, { useState } from 'react';\r\nimport { authService } from 'services/firebase/fbase';\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from 'firebase/auth';\r\nimport { updateUsersProfileData, updateUsersProfilePhoto } from 'services/users';\r\n\r\nexport const defaultProfileURL =\r\n  'https://firebasestorage.googleapis.com/v0/b/switter-b2db8.appspot.com/o/logo.png?alt=media&token=d636781d-a94b-4b3f-8b18-374cceacf61d';\r\n\r\nconst initialUserObj = (email, photoURL) => ({\r\n  email,\r\n  aboutMe: '',\r\n  displayName: '♥',\r\n  photoURL,\r\n  commentedSweets: [],\r\n  writtenSweets: [],\r\n  likesSweets: [],\r\n});\r\n\r\nconst AuthForm = () => {\r\n  const [loginInputs, setLoginInputs] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const { email, password } = loginInputs;\r\n  const [error, setError] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setLoginInputs({\r\n      ...loginInputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      // let data;\r\n      if (newAccount) {\r\n        // create newAccount\r\n        createUserWithEmailAndPassword(authService, email, password).then((res) => {\r\n          const uid = res.user.uid;\r\n          updateUsersProfilePhoto(uid, defaultProfileURL).catch((err) => {\r\n            console.log('updateUsersProfilePhoto err', err);\r\n          });\r\n          updateUsersProfileData(uid, initialUserObj(email, defaultProfileURL)).catch(\r\n            (err) => console.log('updateUsersProfileData err', err)\r\n          );\r\n        });\r\n      } else {\r\n        // log in\r\n        await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      // console.log('Auth data', data.user.uid);\r\n    } catch (error) {\r\n      console.log('AuthForm onSubmit error :', error, 'error.message :', error.message);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? '가입하기' : '로그인'}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? '로그인하기' : '이메일로 가입하기'}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from 'react';\r\nimport { authService } from 'services/firebase/fbase';\r\nimport { GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport AuthForm from 'components/auth/AuthForm';\r\n\r\nconst Auth = ({ darkMode }) => {\r\n  const onSocialClick = async ({ target: { name } }) => {\r\n    let provider;\r\n    try {\r\n      if (name === 'google') {\r\n        provider = new GoogleAuthProvider();\r\n        await signInWithPopup(authService, provider);\r\n        // const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      } else if (name === 'github') {\r\n        provider = new GithubAuthProvider();\r\n        await signInWithPopup(authService, provider);\r\n        // const credential = GithubAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={darkMode ? 'authContainer dark' : 'authContainer'}>\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#9775fa'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Google로 로그인{' '}\r\n          <FontAwesomeIcon icon={faGoogle} color={'#fff'} style={{ marginLeft: 2 }} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Github로 로그인{' '}\r\n          <FontAwesomeIcon icon={faGithub} color={'#fff'} style={{ marginLeft: 2 }} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","export const handleCopy = (sweetId) => {\r\n  navigator.clipboard.writeText(\r\n    `https://vanillovin.github.io/switter/#/sweet/${sweetId}`\r\n  );\r\n  alert('클립보드로 복사됐습니다');\r\n};\r\n\r\nexport const shareSns = (sns, id) => {\r\n  const title = 'Switter';\r\n  const pageUrl = 'https://vanillovin.github.io/switter';\r\n\r\n  if (sns === 'twitter') {\r\n    window.open(\r\n      `https://twitter.com/intent/tweet?text=${title}&url=${pageUrl}/%23/sweet/${id}`,\r\n      'popup제목',\r\n      'width=500, height=400, scrollbars=yes'\r\n    );\r\n  } else if (sns === 'facebook') {\r\n    window.open(`http://www.facebook.com/sharer/sharer.php?u=${pageUrl}/%23/sweet/${id}`);\r\n  } else {\r\n    return;\r\n  }\r\n};\r\n\r\nexport function displayedAt(createdAt) {\r\n  const milliSeconds = new Date() - createdAt;\r\n  const seconds = milliSeconds / 1000;\r\n  if (seconds < 60) return `방금 전`;\r\n  const minutes = seconds / 60;\r\n  if (minutes < 60) return `${Math.floor(minutes)}분 전`;\r\n  const hours = minutes / 60;\r\n  if (hours < 24) return `${Math.floor(hours)}시간 전`;\r\n  const days = hours / 24;\r\n  if (days < 7) return `${Math.floor(days)}일 전`;\r\n  const weeks = days / 7;\r\n  if (weeks < 5) return `${Math.floor(weeks)}주 전`;\r\n  const months = days / 30;\r\n  if (months < 12) return `${Math.floor(months)}개월 전`;\r\n  const years = days / 365;\r\n  return `${Math.floor(years)}년 전`;\r\n}\r\n\r\n// export const getCreatedAt = () => {\r\n//   const month = new Date(sweetObj.createdAt).getMonth() + 1;\r\n//   const date = new Date(sweetObj.createdAt).getDate();\r\n//   const hour = new Date(sweetObj.createdAt).getHours();\r\n//   const min = new Date(sweetObj.createdAt).getMinutes();\r\n//   return `${displayedAt(sweetObj.createdAt)}`;\r\n// };\r\n","import { useState } from 'react';\r\n\r\nfunction useInput(initialValue = '') {\r\n  const [value, setValue] = useState(initialValue);\r\n  const onChangeValue = (e) => setValue(e.target.value);\r\n  const onClearValue = () => setValue('');\r\n  return { value, setValue: (val) => setValue(val), onChangeValue, onClearValue };\r\n}\r\n\r\nexport default useInput;\r\n","import React from 'react';\r\nimport useInput from 'hooks/useInput';\r\n\r\nfunction SweetEdit({ text, onSubmit, closeEdit }) {\r\n  const { value, onChangeValue } = useInput(text);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"container sweetEdit\" onSubmit={handleSubmit}>\r\n        <textarea\r\n          className=\"formInput\"\r\n          type=\"text\"\r\n          placeholder=\"스윗 수정하기\"\r\n          name=\"sweet\"\r\n          required\r\n          autoFocus\r\n          value={value}\r\n          onChange={onChangeValue}\r\n          maxLength={500}\r\n        />\r\n        <input type=\"submit\" value=\"스윗 업데이트\" className=\"formBtn\" />\r\n      </form>\r\n      <button onClick={closeEdit} className=\"formBtn cancelBtn\">\r\n        취소\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SweetEdit;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction useToggle(toggleRef) {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const onToggleChange = () => setToggle((prev) => !prev);\r\n\r\n  const clickToggleOutside = (event) => {\r\n    if (!toggleRef.current?.contains(event.target)) {\r\n      setToggle(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (toggle) {\r\n      document.addEventListener('mousedown', clickToggleOutside);\r\n    }\r\n    return () => {\r\n      document.addEventListener('mousedown', clickToggleOutside);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [toggle]);\r\n\r\n  return [toggle, onToggleChange];\r\n}\r\n\r\nexport default useToggle;\r\n","import React, { useRef } from 'react';\r\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\r\nimport { FaComment, FaFacebook, FaHeart, FaShare, FaTwitter } from 'react-icons/fa';\r\nimport { FiLink } from 'react-icons/fi';\r\nimport useToggle from 'hooks/useToggle';\r\nimport { handleCopy, shareSns } from 'utils';\r\n\r\nfunction SweetActionButtons({\r\n  type,\r\n  id,\r\n  likes,\r\n  liked,\r\n  comments,\r\n  handleLikeSweet,\r\n  handleAddComment,\r\n}) {\r\n  const toggleRef = useRef();\r\n  const [toggle, onToggleChange] = useToggle(toggleRef);\r\n  return (\r\n    <div className={`bottom b${type}`}>\r\n      <button title=\"마음에 들어요\" onClick={handleLikeSweet}>\r\n        {type !== 'detail' ? (\r\n          <>\r\n            <FaHeart color={liked ? '#e05d5d' : ''} />\r\n            <span>{` ${likes.length}`}</span>\r\n          </>\r\n        ) : liked ? (\r\n          <AiFillHeart />\r\n        ) : (\r\n          <AiOutlineHeart />\r\n        )}\r\n      </button>\r\n      <button title=\"답글\" onClick={handleAddComment}>\r\n        <FaComment />\r\n        {type !== 'detail' && <span>{` ${comments.length}`}</span>}\r\n      </button>\r\n      <div className=\"toggles\" ref={toggleRef} title=\"공유하기\">\r\n        <button className=\"shareBtn\" onClick={onToggleChange}>\r\n          <FaShare />\r\n        </button>\r\n        {toggle && (\r\n          <div title=\"링크 복사하기\" className=\"buttons\">\r\n            <button onClick={() => handleCopy(id)}>\r\n              <FiLink /> 스윗 링크 복사하기\r\n            </button>\r\n            <button title=\"트위터에 공유하기\" onClick={() => shareSns('twitter', id)}>\r\n              <FaTwitter /> 트위터에 공유하기\r\n            </button>\r\n            <button title=\"페이스북에 공유하기\" onClick={() => shareSns('facebook', id)}>\r\n              <FaFacebook /> 페이스북에 공유하기\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SweetActionButtons;\r\n","import { useState } from 'react';\r\n\r\nconst useModal = () => {\r\n  const [modal, setModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState('im modal content');\r\n  const handleModal = (content = false) => {\r\n    setModal((prev) => !prev);\r\n    if (content) setModalContent(content);\r\n  };\r\n  const closeModal = (content = false) => {\r\n    setModal(false);\r\n    if (content) setModalContent(content);\r\n  };\r\n  const openModal = (content = false) => {\r\n    setModal(true);\r\n    if (content) setModalContent(content);\r\n  };\r\n  return { modal, handleModal, openModal, closeModal, modalContent };\r\n};\r\n\r\nexport default useModal;\r\n","import {\r\n  addDoc,\r\n  arrayRemove,\r\n  arrayUnion,\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  getFirestore,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\nimport { deleteObject, getDownloadURL, ref, uploadString } from 'firebase/storage';\r\nimport { dbService, storageService } from './firebase/fbase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const fetchSweets = (snapshot, error) => {\r\n  // console.log('into fetch sweets');\r\n  return onSnapshot(\r\n    query(collection(getFirestore(), 'sweets'), orderBy('createdAt', 'desc')),\r\n    snapshot,\r\n    error\r\n  );\r\n};\r\n\r\nexport const fetchSweet = (id, snapshot, error) => {\r\n  return onSnapshot(doc(dbService, `sweets/${id}`), snapshot, error);\r\n};\r\n\r\nexport const createSweet = (sweetObj) => {\r\n  return addDoc(collection(dbService, 'sweets'), sweetObj);\r\n};\r\n\r\nexport const imageFileUploadAndDownload = async (uid, attachment) => {\r\n  try {\r\n    const fileRef = ref(storageService, `${uid}/${uuidv4()}`);\r\n    const uploadFile = await uploadString(fileRef, attachment, 'data_url');\r\n    return getDownloadURL(uploadFile.ref);\r\n  } catch (err) {\r\n    console.log('imageFileUploadAndDownload err', err);\r\n  }\r\n};\r\n\r\nexport const profileImageFileUploadAndDownload = async (uid, fileDataUrl) => {\r\n  try {\r\n    // 1. 파일이 업로드되서 저장될 버킷 내부의 래퍼런스 경로를 생성\r\n    const fileReference = ref(storageService, `${uid}/profileImage`);\r\n    // 2. 파일 데이터를 버킷 내부의 래퍼런스 경로로 전달 (파일을 버킷에 업로드)\r\n    const uploadTask = await uploadString(fileReference, fileDataUrl, 'data_url');\r\n    // 3. 버킷 내부의 래퍼런스에 있는 파일에 대한 DownloadURL을 받음\r\n    return await getDownloadURL(uploadTask.ref);\r\n  } catch (err) {\r\n    console.log('sweets - profileImageFileUploadAndDownload err', err);\r\n  }\r\n};\r\n\r\nexport const deleteStorageFile = (fileUrl) => {\r\n  return deleteObject(ref(storageService, fileUrl));\r\n};\r\n\r\nexport const deleteSweet = (sid) => {\r\n  return deleteDoc(doc(dbService, `sweets/${sid}`));\r\n};\r\n\r\nexport const likeSweet = (liked, sid, uid) => {\r\n  if (!liked) {\r\n    return updateDoc(doc(dbService, `sweets/${sid}`), {\r\n      likes: arrayUnion(uid),\r\n    });\r\n  } else {\r\n    return updateDoc(doc(dbService, `sweets/${sid}`), {\r\n      likes: arrayRemove(uid),\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateSweet = (sid, text) => {\r\n  return updateDoc(doc(dbService, `sweets/${sid}`), { text });\r\n};\r\n\r\nexport const addSweetComment = (sid, commentObj) => {\r\n  return updateDoc(doc(dbService, `sweets/${sid}`), {\r\n    comments: arrayUnion(commentObj),\r\n  });\r\n};\r\n\r\nexport const updateSweetNestedComment = (sid, comments) => {\r\n  return updateDoc(doc(dbService, `sweets/${sid}`), {\r\n    comments,\r\n  });\r\n};\r\n\r\nexport const deleteSweetComment = (sweetObj, cid) => {\r\n  return updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n    comments: sweetObj.comments.filter((comment) => comment.createdAt !== cid),\r\n  });\r\n};\r\n\r\n/*\r\nexport const createGroceryList = (userName) => {\r\n  const groceriesColRef = collection(db, 'groceryLists');\r\n  return addDoc(groceriesColRef, {\r\n    created: serverTimestamp(),\r\n    users: [{ name: userName }],\r\n  });\r\n};\r\n */\r\n","import React from 'react';\r\nimport { displayedAt } from 'utils';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport useInput from 'hooks/useInput';\r\n\r\nfunction SweetNestedComments({\r\n  nestedComments,\r\n  isOwner,\r\n  handleAddNestedComment,\r\n  handleDeleteNestedComment,\r\n}) {\r\n  const { value, onChangeValue, onClearValue } = useInput();\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleAddNestedComment(value, onClearValue);\r\n  };\r\n  return (\r\n    <div className=\"nestedCommentsContainer\">\r\n      <form className=\"commentForm\" onSubmit={onSubmit}>\r\n        <div className=\"commentInput__container\">\r\n          <input\r\n            className=\"commentInput__input\"\r\n            type=\"text\"\r\n            name=\"comment\"\r\n            value={value}\r\n            onChange={onChangeValue}\r\n            placeholder=\"댓글 달기\"\r\n            required\r\n          />\r\n          <input\r\n            className=\"commentInput__arrow\"\r\n            type=\"submit\"\r\n            value=\"&rarr;\"\r\n            onSubmit={onSubmit}\r\n          />\r\n        </div>\r\n      </form>\r\n      <div className=\"comments\">\r\n        {nestedComments?.map((comment) => (\r\n          <div key={comment.createdAt}>\r\n            <div className=\"hello\">\r\n              <div className=\"info\">\r\n                <span className=\"dname\">{comment.name || '♥'}</span>\r\n                <span className=\"mini\">{displayedAt(comment.createdAt)}</span>\r\n              </div>\r\n              {isOwner && (\r\n                <button\r\n                  className=\"delcommentBtn\"\r\n                  onClick={() => handleDeleteNestedComment(comment.createdAt)}\r\n                >\r\n                  <FaTimes />\r\n                </button>\r\n              )}\r\n            </div>\r\n            <div className=\"ctext\">{comment.text}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SweetNestedComments;\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport { fetchUsersProfileData, fetchUsersProfilePhoto } from 'services/users';\r\n\r\nconst UsersProfileContext = createContext();\r\n\r\nlet UsersProfileProvider = ({ children }) => {\r\n  const [usersProfileData, setUsersProfileData] = useState({\r\n    loading: true,\r\n    data: null,\r\n    error: false,\r\n  });\r\n  const [usersProfilePhoto, setUsersProfilePhoto] = useState();\r\n\r\n  useEffect(() => {\r\n    fetchUsersProfilePhoto(\r\n      (doc) => {\r\n        // console.log('fetchUsersProfilePhoto res', doc.data());\r\n        setUsersProfilePhoto(doc.data());\r\n      },\r\n      (err) => {\r\n        console.log('fetchUsersProfilePhoto error', err);\r\n      }\r\n    );\r\n\r\n    fetchUsersProfileData(\r\n      (doc) => {\r\n        // console.log('fetchUsersProfileData res', doc.data());\r\n        setUsersProfileData((prev) => ({\r\n          ...prev,\r\n          loading: false,\r\n          data: doc.data(),\r\n        }));\r\n      },\r\n      (err) => {\r\n        console.log('fetchUsersProfileData error', err);\r\n        setUsersProfileData((prev) => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: err,\r\n        }));\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <UsersProfileContext.Provider value={{ usersProfilePhoto, usersProfileData }}>\r\n      {children}\r\n    </UsersProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport { UsersProfileContext, UsersProfileProvider };\r\n","import React, { useContext } from 'react';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { displayedAt } from 'utils';\r\nimport SweetActionButtons from './SweetActionButtons';\r\nimport useModal from 'hooks/useModal';\r\nimport { updateSweetNestedComment } from 'services/sweets';\r\nimport { updateUsersProfileData } from 'services/users';\r\nimport SweetNestedComments from './SweetNestedComments';\r\nimport { UsersProfileContext } from 'contexts/UsersProfileContext';\r\n\r\nfunction SweetComment({ comments, comment, userObj, handleDeleteComment }) {\r\n  const { modal, handleModal } = useModal();\r\n  const isOwner = comment.uid === userObj.uid;\r\n  const {\r\n    usersProfileData: { data },\r\n  } = useContext(UsersProfileContext);\r\n  const profileData = data?.[userObj.uid];\r\n\r\n  const onHandleDeleteComment = () => handleDeleteComment(comment.createdAt);\r\n\r\n  const handleLikeComment = () => {\r\n    const liked = new Set(comment.likes).has(userObj.uid);\r\n    const newComments = comments.map((pComment) =>\r\n      pComment.createdAt === comment.createdAt\r\n        ? {\r\n            ...comment,\r\n            likes: liked\r\n              ? comment.likes.filter((uid) => uid !== userObj.uid)\r\n              : [...comment.likes, userObj.uid],\r\n          }\r\n        : pComment\r\n    );\r\n    updateSweetNestedComment(comment.id, newComments)\r\n      .then((res) => {\r\n        console.log('handleLikeComment res', res);\r\n        updateUsersProfileData(userObj.uid, {\r\n          ...profileData,\r\n          likesSweets: liked\r\n            ? profileData.likesSweets.filter((lSweet) => lSweet.id !== comment.id)\r\n            : [...profileData.likesSweets, comment],\r\n        })\r\n          .then((res) => {\r\n            console.log('updateProfileLikesComments res', res);\r\n          })\r\n          .catch((err) => {\r\n            console.log('updateProfileLikesComments err', err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log('handleLikeComment err', err);\r\n      });\r\n  };\r\n\r\n  const handleAddNestedComment = (text, onClearValue) => {\r\n    const nestedComment = {\r\n      commentId: comment.createdAt,\r\n      id: comment.id,\r\n      createdAt: Date.now(),\r\n      uid: userObj.uid,\r\n      name: userObj.displayName,\r\n      text,\r\n    };\r\n    const newComments = comments.map((pComment) =>\r\n      pComment.createdAt === comment.createdAt\r\n        ? { ...comment, nestedComments: [...comment.nestedComments, nestedComment] }\r\n        : pComment\r\n    );\r\n    updateSweetNestedComment(comment.id, newComments)\r\n      .then((res) => {\r\n        // console.log('updateSweetNestedComment res', res);\r\n        onClearValue();\r\n        updateUsersProfileData(userObj?.uid, {\r\n          ...profileData,\r\n          commentedSweets: [...profileData.commentedSweets, nestedComment],\r\n        })\r\n          .then((res) => {\r\n            console.log('updateUsersCommentedSweets res', res);\r\n          })\r\n          .catch((err) => {\r\n            console.log('updateUsersCommentedSweets err', err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log('updateSweetNestedComment err', err);\r\n      });\r\n  };\r\n\r\n  const handleDeleteNestedComment = (id) => {\r\n    if (!window.confirm('답글을 삭제하시겠습니까?')) return;\r\n    const newComments = comments.map((pComment) =>\r\n      pComment.createdAt === comment.createdAt\r\n        ? {\r\n            ...comment,\r\n            nestedComments: comment.nestedComments.filter(\r\n              (nComment) => nComment.createdAt !== id\r\n            ),\r\n          }\r\n        : pComment\r\n    );\r\n    updateSweetNestedComment(comment.id, newComments)\r\n      .then((res) => {\r\n        // console.log('deleteSweetNestedComment res', res);\r\n        updateUsersProfileData(userObj.uid, {\r\n          ...profileData,\r\n          commentedSweets: profileData.commentedSweets.filter(\r\n            (cSweet) => cSweet.createdAt !== id\r\n          ),\r\n        })\r\n          .then((res) => {\r\n            console.log('updateUsersCommentedSweets res', res);\r\n          })\r\n          .catch((err) => {\r\n            console.log('updateUsersCommentedSweets err', err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log('deleteSweetNestedComment err', err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"comment\" key={comment.createdAt}>\r\n      <div className=\"hello\">\r\n        <div className=\"info\">\r\n          <span className=\"dname\">{comment.name || '♥'}</span>\r\n          <span className=\"mini\">{displayedAt(comment.createdAt)}</span>\r\n        </div>\r\n        {isOwner && (\r\n          <button className=\"delcommentBtn\" onClick={onHandleDeleteComment}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"ctext\">{comment.text}</div>\r\n      <SweetActionButtons\r\n        type=\"comment\"\r\n        id=\"id\"\r\n        likes={comment.likes}\r\n        liked={new Set(comment.likes).has(userObj.uid)}\r\n        comments={comment.nestedComments}\r\n        handleLikeSweet={handleLikeComment}\r\n        handleAddComment={handleModal}\r\n      />\r\n\r\n      {modal && (\r\n        <SweetNestedComments\r\n          nestedComments={comment.nestedComments.sort(\r\n            (a, b) => b.createdAt - a.createdAt\r\n          )}\r\n          isOwner={isOwner}\r\n          handleAddNestedComment={handleAddNestedComment}\r\n          handleDeleteNestedComment={handleDeleteNestedComment}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SweetComment;\r\n","import React from 'react';\r\nimport useInput from 'hooks/useInput';\r\nimport SweetComment from './SweetComment';\r\n\r\nfunction SweetComments({ handleAddComment, handleDeleteComment, comments, userObj }) {\r\n  const { value, onChangeValue, onClearValue } = useInput();\r\n\r\n  const onHandleAddComment = (e) => {\r\n    e.preventDefault();\r\n    handleAddComment(value, onClearValue);\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <div style={{ marginTop: 10 }}>\r\n        <form className=\"commentForm\" onSubmit={onHandleAddComment}>\r\n          <div className=\"commentInput__container\">\r\n            <input\r\n              className=\"commentInput__input\"\r\n              type=\"text\"\r\n              name=\"comment\"\r\n              value={value}\r\n              onChange={onChangeValue}\r\n              placeholder=\"댓글 달기\"\r\n              required\r\n            />\r\n            <input\r\n              className=\"commentInput__arrow\"\r\n              type=\"submit\"\r\n              value=\"&rarr;\"\r\n              onSubmit={onHandleAddComment}\r\n            />\r\n          </div>\r\n        </form>\r\n        <div className=\"comments\">\r\n          {comments?.map((comment) => (\r\n            <SweetComment\r\n              key={comment.createdAt}\r\n              comments={comments}\r\n              comment={comment}\r\n              userObj={userObj}\r\n              handleDeleteComment={handleDeleteComment}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SweetComments;\r\n","import React, { useContext, useState } from 'react';\r\nimport { FaPencilAlt, FaTrash } from 'react-icons/fa';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { displayedAt } from 'utils';\r\nimport SweetEdit from './SweetEdit';\r\nimport SweetComments from './SweetComments';\r\nimport SweetActionButtons from './SweetActionButtons';\r\nimport {\r\n  addSweetComment,\r\n  deleteStorageFile,\r\n  deleteSweet,\r\n  deleteSweetComment,\r\n  likeSweet,\r\n  updateSweet,\r\n} from 'services/sweets';\r\nimport { updateUsersProfileData } from 'services/users';\r\nimport { UsersProfileContext } from 'contexts/UsersProfileContext';\r\n\r\nconst Sweet = ({ userObj, sweet, isOwner, darkMode }) => {\r\n  const history = useHistory();\r\n  const comments = sweet.comments.sort((a, b) => b.createdAt - a.createdAt);\r\n  const [editing, setEditing] = useState(false);\r\n  const [addComment, setAddComment] = useState(false);\r\n  const {\r\n    usersProfileData: { data },\r\n    usersProfilePhoto,\r\n  } = useContext(UsersProfileContext);\r\n  const profileData = data?.[sweet?.creatorId];\r\n  const profilePhoto = usersProfilePhoto?.[sweet?.creatorId];\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const goToSweetDetailPage = (e) => {\r\n    if (e.target !== e.currentTarget) return;\r\n    // e.stopImmediatePropagation();\r\n    history.push(`/sweet/${sweet?.id}`);\r\n  };\r\n\r\n  const handleDeleteSweet = () => {\r\n    if (!window.confirm('스윗을 삭제하시겠습니까?')) return;\r\n    if (sweet.attachmentUrl !== '') {\r\n      deleteStorageFile(sweet.attachmentUrl).catch((err) => {\r\n        console.log('deleteStorageFile err', err);\r\n      });\r\n    }\r\n    deleteSweet(sweet.id)\r\n      .then((res) => {\r\n        updateUsersProfileData(userObj.uid, {\r\n          ...profileData,\r\n          likesSweets: profileData.likesSweets.filter((lSweet) => lSweet.id !== sweet.id),\r\n          commentedSweets: profileData.commentedSweets.filter(\r\n            (cSweet) => cSweet.id !== sweet.id\r\n          ),\r\n          writtenSweets: profileData.writtenSweets.filter(\r\n            (wSweet) => wSweet.id !== sweet.id\r\n          ),\r\n        }).catch((err) => {\r\n          console.log('updateUsersProfileData delComment err', err);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log('deleteSweet err', err);\r\n      });\r\n  };\r\n\r\n  const handleLikeSweet = () => {\r\n    const liked = new Set(sweet.likes).has(userObj.uid);\r\n    likeSweet(liked, sweet.id, userObj.uid)\r\n      .then((res) => {\r\n        updateUsersProfileData(userObj.uid, {\r\n          ...profileData,\r\n          likesSweets: liked\r\n            ? profileData.likesSweets.filter((lSweet) => lSweet.id !== sweet.id)\r\n            : [...profileData.likesSweets, sweet],\r\n        })\r\n          .then((res) => {\r\n            console.log('updateProfileLikesSweets res', res);\r\n          })\r\n          .catch((err) => {\r\n            console.log('updateProfileLikesSweets err', err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log('likeSweet err', err);\r\n      });\r\n  };\r\n\r\n  const handleUpdateSweet = (text) => {\r\n    // const sweetData = getState().sweetsReducer.sweets.data.find((sweet) => sweet.id === id);\r\n    // if (!sweetData.id) return;\r\n    updateSweet(sweet.id, text)\r\n      .then((res) => {\r\n        setEditing(false);\r\n        updateUsersProfileData(userObj.uid, {\r\n          ...profileData,\r\n          likesSweets: profileData.likesSweets.map((lSweet) =>\r\n            lSweet.id === sweet.id ? { ...lSweet, text } : lSweet\r\n          ),\r\n          commentedSweets: profileData.commentedSweets.map((cSweet) =>\r\n            cSweet.id === sweet.id ? { ...cSweet, text } : cSweet\r\n          ),\r\n          writtenSweets: profileData.writtenSweets.map((wSweet) =>\r\n            wSweet.id === sweet.id ? { ...wSweet, text } : wSweet\r\n          ),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log('updateSweet err', err);\r\n      });\r\n  };\r\n\r\n  const handleAddComment = (text, clearText) => {\r\n    const commentObj = {\r\n      id: sweet.id,\r\n      uid: userObj.uid,\r\n      createdAt: Date.now(),\r\n      name: userObj.displayName,\r\n      text,\r\n      likes: [],\r\n      nestedComments: [],\r\n    };\r\n    addSweetComment(sweet.id, commentObj)\r\n      .then((res) => {\r\n        clearText();\r\n        // console.log('addSweetComment res', res);\r\n        updateUsersProfileData(userObj.uid, {\r\n          ...profileData,\r\n          commentedSweets: [...profileData.commentedSweets, commentObj],\r\n        })\r\n          .then((res) => {\r\n            console.log('updateUsersCommentedSweets res', res);\r\n          })\r\n          .catch((err) => {\r\n            console.log('updateUsersCommentedSweets err', err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log('addSweetComment err', err);\r\n      });\r\n  };\r\n\r\n  const handleDeleteComment = (cid) => {\r\n    if (!window.confirm('댓글을 삭제하시겠습니까?')) return;\r\n    deleteSweetComment(sweet, cid)\r\n      .then((res) => {\r\n        updateUsersProfileData(userObj.uid, {\r\n          ...profileData,\r\n          commentedSweets: profileData.commentedSweets\r\n            .filter((cSweet) => cSweet.createdAt !== cid)\r\n            .filter((s) => s.commentId !== cid),\r\n        })\r\n          .then((res) => {\r\n            console.log('updateUsersCommentedSweets delete res', res);\r\n          })\r\n          .catch((err) => {\r\n            console.log('updateUsersCommentedSweets delete err', err);\r\n          });\r\n      })\r\n      .catch((err) => console.log('deleteSweetComment err', err));\r\n  };\r\n\r\n  return (\r\n    <div className={darkMode ? 'sweet dark' : 'sweet'} onClick={goToSweetDetailPage}>\r\n      {editing ? (\r\n        <SweetEdit\r\n          text={sweet.text}\r\n          onSubmit={handleUpdateSweet}\r\n          closeEdit={() => setEditing(false)}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"hello\">\r\n            <div className=\"info\">\r\n              <img\r\n                alt=\"profile\"\r\n                src={profilePhoto || `${process.env.PUBLIC_URL}/default-profile.png`}\r\n              />\r\n              <span className=\"dname\">{sweet.dName || '♥'}</span>\r\n              <span className=\"mini\">{displayedAt(sweet.createdAt)}</span>\r\n            </div>\r\n            {isOwner && (\r\n              <div className=\"sweet__actions\">\r\n                <span onClick={handleDeleteSweet}>\r\n                  <FaTrash />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FaPencilAlt />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <p className=\"sweet__text\" onClick={goToSweetDetailPage}>\r\n            {sweet.text}\r\n          </p>\r\n          {sweet.attachmentUrl && (\r\n            <img alt=\"img\" src={sweet.attachmentUrl} onClick={goToSweetDetailPage} />\r\n          )}\r\n          <>\r\n            <SweetActionButtons\r\n              type=\"sweet\"\r\n              id={sweet.id}\r\n              likes={sweet.likes}\r\n              liked={new Set(sweet.likes).has(userObj.uid)}\r\n              comments={sweet.comments}\r\n              handleLikeSweet={handleLikeSweet}\r\n              handleAddComment={() => setAddComment((prev) => !prev)}\r\n            />\r\n            {addComment && (\r\n              <SweetComments\r\n                handleAddComment={handleAddComment}\r\n                handleDeleteComment={handleDeleteComment}\r\n                comments={comments}\r\n                userObj={userObj}\r\n              />\r\n            )}\r\n          </>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sweet;\r\n","import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport useInput from 'hooks/useInput';\r\nimport { updateUsersProfileData } from 'services/users';\r\nimport { createSweet, imageFileUploadAndDownload } from 'services/sweets';\r\nimport { UsersProfileContext } from 'contexts/UsersProfileContext';\r\n\r\nconst SweetFactory = ({ userObj, darkMode }) => {\r\n  const {\r\n    usersProfileData: { data },\r\n  } = useContext(UsersProfileContext);\r\n  const profileData = data?.[userObj.uid];\r\n  const { value: text, onChangeValue, onClearValue } = useInput('');\r\n  const {\r\n    value: attachment,\r\n    setValue: setAttachment,\r\n    onClearValue: onClearAttachment,\r\n  } = useInput('');\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (text === '') return;\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      attachmentUrl = await imageFileUploadAndDownload(userObj.uid, attachment);\r\n    }\r\n\r\n    const sweetObj = {\r\n      text,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n      dName: userObj.displayName,\r\n      email: userObj.email,\r\n      likes: [],\r\n      comments: [],\r\n    };\r\n\r\n    createSweet(sweetObj)\r\n      .then((res) => {\r\n        // console.log('createSweet res', res.id);\r\n        onClearValue();\r\n        onClearAttachment();\r\n        updateUsersProfileData(userObj.uid, {\r\n          ...profileData,\r\n          writtenSweets: [...profileData.writtenSweets, { id: res.id, ...sweetObj }],\r\n        })\r\n          .then((res) => {\r\n            console.log('updateUserProfileArrData writtenSweets res', res);\r\n          })\r\n          .catch((err) => {\r\n            console.log('updateUserProfileArrData writtenSweets err', err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log('createSweet err', err);\r\n      });\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader(); // fileReader API 파일 이름을 읽음\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className={darkMode ? 'factoryForm dark' : 'factoryForm'}>\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={text}\r\n          onChange={onChangeValue}\r\n          type=\"text\"\r\n          placeholder=\"무슨 달콤한 생각을 하고 있나요?\"\r\n          maxLength={120}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"&rarr;\"\r\n          className=\"factoryInput__arrow\"\r\n          onSubmit={onsubmit}\r\n        />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>사진 선택하기</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            alt=\"img\"\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>제거하기</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SweetFactory;\r\n","import React from 'react';\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className=\"loading-component\">\r\n      <div className=\"loading\"></div>\r\n      <p>loading...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Sweet from 'components/sweet/Sweet';\r\nimport SweetFactory from 'components/sweet/SweetFactory';\r\nimport { fetchSweets } from 'services/sweets';\r\nimport Loading from 'components/Loading';\r\n\r\nconst initialSweets = {\r\n  loading: true,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nfunction Home({ userObj, darkMode }) {\r\n  const [sweets, setSweets] = useState(initialSweets);\r\n  const { loading, data, error } = sweets;\r\n\r\n  const clearSweets = () => setSweets(initialSweets);\r\n\r\n  useEffect(() => {\r\n    fetchSweets(\r\n      (snapshot) => {\r\n        const sweets = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setSweets((prev) => ({\r\n          ...prev,\r\n          loading: false,\r\n          data: sweets,\r\n        }));\r\n      },\r\n      (err) => {\r\n        console.log('fetchSweets error', err);\r\n        setSweets((prev) => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: err,\r\n        }));\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      fetchSweets();\r\n      clearSweets();\r\n    };\r\n  }, []);\r\n\r\n  return !loading ? (\r\n    <div className={darkMode ? 'container dark' : 'container'}>\r\n      <SweetFactory userObj={userObj} darkMode={darkMode} />\r\n      <div className=\"sweet-container\" style={{ marginTop: 30 }}>\r\n        {data?.map((sweet) => (\r\n          <Sweet\r\n            key={sweet.id}\r\n            userObj={userObj}\r\n            sweet={sweet}\r\n            isOwner={sweet.creatorId === userObj.uid}\r\n            darkMode={darkMode}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <Loading />\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n  faEllipsisH,\r\n  faEnvelope,\r\n  faHome,\r\n  faMoon,\r\n  faUser,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj, darkMode, onDarkMode }) => {\r\n  return (\r\n    <nav className={darkMode ? 'nav dark' : 'nav'}>\r\n      {/* <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}> */}\r\n      <ul style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <li className=\"logo\">\r\n          <NavLink to=\"/\" className=\"navlink\" activeClassName=\"\">\r\n            <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n            <span>♥</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"home\">\r\n          <NavLink to=\"/\" className=\"navlink\" activeClassName=\"\">\r\n            <FontAwesomeIcon icon={faHome} size=\"2x\" />\r\n            <span>home</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"profile\">\r\n          <NavLink className=\"navlink\" activeClassName=\"\" to={`/profile/${userObj.uid}`}>\r\n            <FontAwesomeIcon icon={faUser} size=\"2x\" />\r\n            <span>{userObj.displayName || '♥'}</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"msg\">\r\n          <NavLink to=\"/msg\" className=\"navlink\" activeClassName=\"active\">\r\n            <FontAwesomeIcon icon={faEnvelope} size=\"2x\" />\r\n            <span>{'+1'}</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"dark navlink\" onClick={onDarkMode}>\r\n          <FontAwesomeIcon\r\n            icon={faMoon}\r\n            size=\"2x\"\r\n            color={darkMode ? '#e9c77b' : '#000000cc'}\r\n          />\r\n          <span>{darkMode ? 'light' : 'dark'}</span>\r\n        </li>\r\n        <li className=\"more navlink\">\r\n          <FontAwesomeIcon icon={faEllipsisH} size=\"2x\" />\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import useInput from 'hooks/useInput';\r\nimport React from 'react';\r\n\r\nfunction ProfileEdit({ photoURL, displayName, aboutMe, onSubmit, onCloseEdit }) {\r\n  const { value: fileDataUrl, setValue: setFileDataUrl } = useInput(photoURL);\r\n  const { value: newDisplayName, onChangeValue } = useInput(displayName);\r\n  const { value: newAboutMe, onChangeValue: onChangeAboutMe } = useInput(aboutMe);\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(fileDataUrl, newDisplayName, newAboutMe);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const uploadFile = files[0];\r\n    // const uploadFileName = uploadFile?.name;\r\n    const fileReader = new FileReader();\r\n    if (fileReader && uploadFile !== undefined && uploadFile !== null) {\r\n      fileReader.onload = (event) => {\r\n        const {\r\n          target: { result },\r\n        } = event;\r\n\r\n        setFileDataUrl(result);\r\n      };\r\n      fileReader.readAsDataURL(uploadFile);\r\n      // setFileName(`${uploadFileName}_${Date.now()}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handelSubmit}\r\n      // className={darkMode ? 'profileForm dark' : 'profileForm'}\r\n    >\r\n      <div className=\"editProfileImage\">\r\n        <img\r\n          alt=\"profile\"\r\n          className=\"profileImage\"\r\n          src={fileDataUrl || `${process.env.PUBLIC_URL}/default-profile.png`}\r\n        />\r\n        <label htmlFor=\"attach-file\" className=\"\">\r\n          <span>사진 선택하기</span>\r\n        </label>\r\n        <input\r\n          id=\"attach-file\"\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onFileChange}\r\n          style={{ display: 'none', opacity: 0 }}\r\n        />\r\n        {fileDataUrl !== photoURL && (\r\n          <button className=\"profileImgclearBtn\" onClick={() => setFileDataUrl(photoURL)}>\r\n            <span>제거하기</span>\r\n          </button>\r\n        )}\r\n        {/* {attachment !== defaultProfileURL && (\r\n          <button\r\n            className=\"profileImgclearBtn\"\r\n            onClick={() => setAttachment(defaultProfileURL)}\r\n          >\r\n            <span>사진 삭제하기</span>\r\n          </button>\r\n        )} */}\r\n      </div>\r\n\r\n      <input\r\n        onChange={onChangeValue}\r\n        type=\"text\"\r\n        placeholder=\"Display name\"\r\n        value={newDisplayName || ''}\r\n        className=\"formInput\"\r\n      />\r\n      <input\r\n        onChange={onChangeAboutMe}\r\n        type=\"text\"\r\n        placeholder=\"About Me\"\r\n        value={newAboutMe || ''}\r\n        className=\"formInput aboutMeInput\"\r\n      />\r\n      <input\r\n        type=\"submit\"\r\n        className=\"formBtn updateProfileBtn\"\r\n        onClick={handelSubmit}\r\n        value=\"프로필 업데이트\"\r\n      />\r\n      <input\r\n        type=\"button\"\r\n        className=\"formBtn updateProfileBtn\"\r\n        onClick={onCloseEdit}\r\n        style={{ background: 'rgba(177,151,252,0.6)' }}\r\n        value=\"취소하기\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ProfileEdit;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction NotFoundPage({ message = '존재하지 않는 페이지입니다' }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"notFound\">\r\n      <h1>{message}</h1>\r\n      <button onClick={() => history.push('/')}>홈으로 돌아가기</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import reactDom from 'react-dom';\r\n\r\nconst ModalPortal = ({ children }) => {\r\n  const modalElement = document.getElementById('modal');\r\n  return reactDom.createPortal(children, modalElement);\r\n};\r\n\r\nexport default ModalPortal;\r\n","import { ModalContext } from 'contexts/ModalContext';\r\nimport React, { useContext, useRef } from 'react';\r\nimport ModalPortal from './ModalPortal';\r\n\r\nfunction Modal() {\r\n  const el = useRef();\r\n  const { modal, modalContent, closeModal } = useContext(ModalContext);\r\n  return modal ? (\r\n    <ModalPortal>\r\n      <div\r\n        className=\"modal-container\"\r\n        onClick={(e) => {\r\n          if (e.target === e.currentTarget) closeModal();\r\n        }}\r\n        ref={el}\r\n      >\r\n        <div className=\"modal\">\r\n          <h1>Ooops</h1>\r\n          <p>{modalContent}</p>\r\n          <button className=\"closeBtn\" onClick={() => closeModal()}>\r\n            닫기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </ModalPortal>\r\n  ) : null;\r\n}\r\n\r\nexport default Modal;\r\n","import Modal from 'components/modal/Modal';\r\nimport useModal from 'hooks/useModal';\r\nimport React, { createContext } from 'react';\r\n\r\nconst ModalContext = createContext();\r\n\r\nlet ModalProvider = ({ children }) => {\r\n  const { modal, handleModal, openModal, closeModal, modalContent } = useModal();\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{ modal, handleModal, openModal, closeModal, modalContent }}\r\n    >\r\n      <Modal />\r\n      {children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport { ModalContext, ModalProvider };\r\n","import React, { useContext, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { authService } from 'services/firebase/fbase';\r\nimport { signOut } from '@firebase/auth';\r\nimport Loading from 'components/Loading';\r\nimport ProfileEdit from 'components/profile/ProfileEdit';\r\nimport NotFoundPage from 'components/NotFoundPage';\r\nimport { UsersProfileContext } from 'contexts/UsersProfileContext';\r\nimport { profileImageFileUploadAndDownload } from 'services/sweets';\r\nimport {\r\n  updateCurUserProfile,\r\n  updateUsersProfileData,\r\n  updateUsersProfilePhoto,\r\n} from 'services/users';\r\nimport { ModalContext } from 'contexts/ModalContext';\r\n\r\nconst Profile = ({ refreshUser, userObj, darkMode }) => {\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const {\r\n    usersProfileData: { loading, data, error },\r\n  } = useContext(UsersProfileContext);\r\n  const profileData = data?.[params.uid || userObj.uid];\r\n  const [editProfile, setEditProfile] = useState(false);\r\n  const isOwner = userObj.uid === params.uid;\r\n  const { handleModal } = useContext(ModalContext);\r\n\r\n  const handleLogOut = () => {\r\n    signOut(authService); // auth.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const onSubmit = async (fileDataUrl, newDisplayName, newAboutMe) => {\r\n    if (\r\n      userObj.displayName === newDisplayName &&\r\n      userObj.photoURL === fileDataUrl &&\r\n      profileData.aboutMe === newAboutMe\r\n    ) {\r\n      setEditProfile(false);\r\n      return;\r\n    }\r\n\r\n    let fileDownloadUrl = '';\r\n    if (fileDataUrl !== '') {\r\n      fileDownloadUrl = await profileImageFileUploadAndDownload(userObj.uid, fileDataUrl);\r\n    }\r\n\r\n    updateCurUserProfile({\r\n      displayName: newDisplayName,\r\n      photoURL: fileDownloadUrl,\r\n    })\r\n      .then((res) => {\r\n        console.log('Profile update!', res);\r\n        setEditProfile(false);\r\n        refreshUser();\r\n        updateUsersProfilePhoto(userObj?.uid, fileDownloadUrl).catch((err) => {\r\n          console.log('Profile - updateUsersProfilePhoto err', err);\r\n        });\r\n        updateUsersProfileData(userObj?.uid, {\r\n          ...profileData,\r\n          displayName: newDisplayName,\r\n          aboutMe: newAboutMe,\r\n          photoURL: fileDownloadUrl,\r\n        }).catch((err) => {\r\n          console.log('Profile - updateUsersProfileData err', err);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log('Profile update An error occurred', error);\r\n        handleModal('회원님의 프로필을 업데이트할 수 없습니다. 다시 시도해주세요');\r\n      });\r\n  };\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  if (!profileData) return <NotFoundPage message=\"존재하지 않는 사용자입니다\" />;\r\n\r\n  if (error) return <NotFoundPage message=\"사용자를 조회할 수 없습니다\" />;\r\n\r\n  return (\r\n    <div className={darkMode ? 'profileContainer dark' : 'profileContainer'}>\r\n      <div className=\"profileInfoContainer\">\r\n        {!editProfile ? (\r\n          <div className=\"profileInfo\">\r\n            <div>\r\n              <img\r\n                alt=\"profile\"\r\n                className=\"profileImage\"\r\n                src={\r\n                  profileData?.photoURL || `${process.env.PUBLIC_URL}/default-profile.png`\r\n                }\r\n              />\r\n              <div>\r\n                <h2 className=\"dname\">{profileData?.displayName}</h2>\r\n                <p className=\"email\">@{profileData?.email.split('@')[0]}</p>\r\n              </div>\r\n              <p className=\"aboutMe\">{profileData?.aboutMe}</p>\r\n            </div>\r\n\r\n            {isOwner && (\r\n              <div className=\"profileBtns\">\r\n                <button\r\n                  className=\"profileEditButton\"\r\n                  onClick={() => setEditProfile(true)}\r\n                >\r\n                  프로필 수정\r\n                </button>\r\n                <button className=\"logoutBtn\" onClick={handleLogOut}>\r\n                  로그아웃\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <ProfileEdit\r\n            photoURL={profileData?.photoURL}\r\n            displayName={userObj.displayName}\r\n            aboutMe={profileData?.aboutMe}\r\n            onSubmit={onSubmit}\r\n            onCloseEdit={() => setEditProfile(false)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\n\r\nexport const msgArr = [\r\n  '누군가를 사랑하고자 한다면 너 자신을 먼저 사랑해야 해',\r\n  '앞이 보이지 않을 때는 지금 할 수 있는 일을 하면 돼',\r\n  '진정한 아름다움은 내면에 있어',\r\n  '그렇게 구경만 하다가는 네 인생이 너 없이 흘러가는 걸 구경하게 될걸',\r\n  '마음만을 가지고 있어서는 안 된다. 반드시 실천해야 한다',\r\n  '소심해질 시간 없어 용감하고 대담하게 해',\r\n  '기억해 너는 세상을 빛으로 가득 채울 수 있는 존재란 걸',\r\n  '사랑은 누군가를 나보다 먼저 두는 거야',\r\n  '용기를 내',\r\n  '행운을 빌어',\r\n  '너에게는 아직 꿈을 이루기 위한 충분한 시간이 있어',\r\n  '힘내. 인생은 한순간에 바뀌기도 하는 거니까',\r\n  '큰 희망이 큰 사람을 만든다',\r\n  '가끔은 옳은 길이 가장 쉬운 길이 아닐 때도 있지',\r\n  '절대로 고개를 떨구지 말라 고개를 치켜들고 세상을 똑바로 보라',\r\n  '시간은 아무도 기다려주지 않아',\r\n  '아름다움은 사라져 버리지만 마음에서 우러나는 것은 사라지지 않아. 유머, 친절함, 용기',\r\n  '중요한 건 겉모습이 아닌 마음이야',\r\n  '간절히 바라는 마음이 있어야 마법이 일어날 수 있어',\r\n  '역경을 이겨내고 핀 꽃이 가장 아름다운 꽃이란다',\r\n  '눈을 감지 말고 똑바로 봐. 두려움의 실체는 생각과 다를 수 있어',\r\n  '젊게 사는 건 절대 늦은 나이란 없어',\r\n  '널 억누르던 것들이 널 일으켜 줄 거야',\r\n  '행복이 네가 있는 곳에 있다는 걸 깨닫게 되는 날이 올 거야',\r\n  '누구든 무엇이든 될 수 있어',\r\n  '너의 가족이 널 얼마나 사랑하는지 잊지 마',\r\n  '익숙한 곳을 벗어나서 모험해',\r\n  '인생은 가능성으로 가득 차 있어',\r\n  '매일 행복할 순 없지만, 행복한 것들은 매일 있어',\r\n  '최고의 순간은 갑자기 찾아오는 거야',\r\n];\r\n\r\nconst Message = ({ userName }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [msg, setMsg] = useState(`${userName || 'hey'} 클릭해봐 :)`);\r\n\r\n  const onOpen = () => setOpen(!open);\r\n\r\n  const randomMsg = () => setMsg(msgArr[Math.floor(Math.random() * msgArr.length)]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"msg-container\">\r\n        <div className=\"msgh\">\r\n          <span>Message</span>\r\n        </div>\r\n\r\n        {open ? (\r\n          <div className=\"msgs\" onClick={onOpen}>\r\n            <div className=\"chat\">\r\n              <div style={{ fontWeight: 'bold', marginBottom: 12 }}>\r\n                <FontAwesomeIcon icon={faUser} /> {'익명'}\r\n              </div>\r\n              <span>{msg}</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"back\" onClick={onOpen}>\r\n              {open ? '' : '←'}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                padding: 20,\r\n              }}\r\n            >\r\n              <div style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faUser} color=\"black\" />\r\n              </div>\r\n              <div className=\"mymsg\" onClick={randomMsg}>\r\n                <span>{msg}</span>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { FaPencilAlt, FaTrash, FaEllipsisH } from 'react-icons/fa';\r\n\r\nimport useToggle from 'hooks/useToggle';\r\nimport SweetComments from '../components/sweet/SweetComments';\r\nimport SweetEdit from 'components/sweet/SweetEdit';\r\nimport {\r\n  addSweetComment,\r\n  deleteStorageFile,\r\n  deleteSweet,\r\n  deleteSweetComment,\r\n  fetchSweet,\r\n  likeSweet,\r\n  updateSweet,\r\n} from 'services/sweets';\r\nimport Loading from 'components/Loading';\r\nimport SweetActionButtons from 'components/sweet/SweetActionButtons';\r\nimport NotFoundPage from 'components/NotFoundPage';\r\nimport { UsersProfileContext } from 'contexts/UsersProfileContext';\r\nimport { updateUsersProfileData } from 'services/users';\r\n\r\nconst regex = /[\\s\\uFEFF\\xA0]+$/gi;\r\n\r\nconst initialSweet = {\r\n  loading: true,\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nfunction SweetDetail({ userObj, darkMode }) {\r\n  const [sweetData, setSweetData] = useState(initialSweet);\r\n  const { loading, data: sweet, error } = sweetData;\r\n  const topToggleRef = useRef();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const [editing, setEditing] = useState(false);\r\n  const [topToggle, onTopToggleChange] = useToggle(topToggleRef);\r\n  const isOwner = sweet?.creatorId === userObj.uid;\r\n  const {\r\n    usersProfilePhoto,\r\n    usersProfileData: { data },\r\n  } = useContext(UsersProfileContext);\r\n  const profileData = data?.[userObj?.uid];\r\n\r\n  const clearSweet = () => setSweetData(initialSweet);\r\n\r\n  useEffect(() => {\r\n    fetchSweet(\r\n      params.id,\r\n      (doc) => {\r\n        // console.log(doc.data());\r\n        setSweetData((prev) => ({\r\n          ...prev,\r\n          loading: false,\r\n          data: doc.data(),\r\n        }));\r\n      },\r\n      (err) => {\r\n        console.log('fetchSweet error', err);\r\n        setSweetData((prev) => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: err,\r\n        }));\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      fetchSweet();\r\n      clearSweet();\r\n    };\r\n  }, [params.id]);\r\n\r\n  const handleDeleteSweet = () => {\r\n    if (!window.confirm('스윗을 삭제하시겠습니까?')) return;\r\n    if (sweet?.attachmentUrl !== '') {\r\n      deleteStorageFile(sweet.attachmentUrl).catch((err) => {\r\n        console.log('deleteStorageFile err', err);\r\n      });\r\n    }\r\n    deleteSweet(params?.id)\r\n      .then((res) => {\r\n        history.goBack();\r\n        updateUsersProfileData(userObj?.uid, {\r\n          ...profileData,\r\n          likesSweets: profileData.likesSweets.filter(\r\n            (lSweet) => lSweet.id !== params?.id\r\n          ),\r\n          commentedSweets: profileData.commentedSweets.filter(\r\n            (cSweet) => cSweet.id !== params?.id\r\n          ),\r\n          writtenSweets: profileData.writtenSweets.filter(\r\n            (wSweet) => wSweet.id !== params?.id\r\n          ),\r\n        }).catch((err) => {\r\n          console.log('updateUsersProfileData delComment err', err);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log('deleteSweet err', err);\r\n      });\r\n  };\r\n\r\n  const handleLikeSweet = () => {\r\n    const liked = new Set(sweet?.likes).has(userObj?.uid);\r\n    likeSweet(liked, params?.id, userObj?.uid)\r\n      .then((res) => {\r\n        updateUsersProfileData(userObj?.uid, {\r\n          ...profileData,\r\n          likesSweets: liked\r\n            ? profileData.likesSweets.filter((lSweet) => lSweet.id !== sweet.id)\r\n            : [...profileData.likesSweets, sweet],\r\n        })\r\n          .then((res) => {\r\n            console.log('updateProfileLikesSweets res', res);\r\n          })\r\n          .catch((err) => {\r\n            console.log('updateProfileLikesSweets err', err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log('likeSweet err', err);\r\n      });\r\n  };\r\n\r\n  const handleUpdateSweet = (text) => {\r\n    // const sweetData = getState().sweetsReducer.sweets.data.find((sweet) => sweet.id === id);\r\n    // if (!sweetData.id) return;\r\n    updateSweet(params?.id, text)\r\n      .then((res) => {\r\n        setEditing(false);\r\n        updateUsersProfileData(userObj?.uid, {\r\n          ...profileData,\r\n          likesSweets: profileData.likesSweets.map((lSweet) =>\r\n            lSweet.id === params?.id ? { ...lSweet, text } : lSweet\r\n          ),\r\n          commentedSweets: profileData.commentedSweets.map((cSweet) =>\r\n            cSweet.id === params?.id ? { ...cSweet, text } : cSweet\r\n          ),\r\n          writtenSweets: profileData.writtenSweets.map((wSweet) =>\r\n            wSweet.id === params?.id ? { ...wSweet, text } : wSweet\r\n          ),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log('updateSweet err', err);\r\n      });\r\n  };\r\n\r\n  const handleAddComment = (text, clearText) => {\r\n    const commentObj = {\r\n      id: params.id,\r\n      uid: userObj?.uid,\r\n      createdAt: Date.now(),\r\n      name: userObj?.displayName,\r\n      text,\r\n      likes: [],\r\n      nestedComments: [],\r\n    };\r\n    addSweetComment(params.id, commentObj)\r\n      .then((res) => {\r\n        clearText();\r\n        // console.log('addSweetComment res', res);\r\n        updateUsersProfileData(userObj.uid, {\r\n          ...profileData,\r\n          commentedSweets: [...profileData.commentedSweets, commentObj],\r\n        })\r\n          .then((res) => {\r\n            console.log('updateUsersCommentedSweets res', res);\r\n          })\r\n          .catch((err) => {\r\n            console.log('updateUsersCommentedSweets err', err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log('addSweetComment err', err);\r\n      });\r\n  };\r\n\r\n  const handleDeleteComment = (cid) => {\r\n    if (!window.confirm('댓글을 삭제하시겠습니까?')) return;\r\n    deleteSweetComment({ ...sweet, id: params?.id }, cid)\r\n      .then((res) => {\r\n        updateUsersProfileData(userObj?.uid, {\r\n          ...profileData,\r\n          commentedSweets: profileData.commentedSweets\r\n            .filter((cSweet) => cSweet.createdAt !== cid)\r\n            .filter((s) => s.commentId !== cid),\r\n        })\r\n          .then((res) => {\r\n            console.log('updateUsersCommentedSweets delete res', res);\r\n          })\r\n          .catch((err) => {\r\n            console.log('updateUsersCommentedSweets delete err', err);\r\n          });\r\n      })\r\n      .catch((err) => console.log('deleteSweetComment err', err));\r\n  };\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  if (!sweet) return <NotFoundPage message=\"존재하지 않는 스윗입니다\" />;\r\n\r\n  return (\r\n    <div className={darkMode ? 'sweetDetailContainer dark' : 'sweetDetailContainer'}>\r\n      <div className=\"sweetDetailTop\">\r\n        <button onClick={() => history.push('/')}>←</button>\r\n        스레드\r\n      </div>\r\n      <div className=\"sweetDetail\">\r\n        {editing ? (\r\n          <SweetEdit\r\n            text={sweet?.text}\r\n            onSubmit={handleUpdateSweet}\r\n            closeEdit={() => setEditing(false)}\r\n          />\r\n        ) : (\r\n          <>\r\n            <div className=\"sweetDetailTopInfo\" onClick={() => {}}>\r\n              <div className=\"userInfo\">\r\n                <img\r\n                  alt=\"profile\"\r\n                  className=\"profile\"\r\n                  src={\r\n                    usersProfilePhoto[sweet.creatorId] ||\r\n                    `${process.env.PUBLIC_URL}/default-profile.png`\r\n                  }\r\n                />\r\n                <div className=\"text\">\r\n                  <span className=\"dname\">{sweet?.dName || '♥'}</span>\r\n                  <span className=\"email\">@{sweet?.email?.split('@')[0]}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"rightButtons\" ref={topToggleRef}>\r\n                {isOwner && (\r\n                  <>\r\n                    <button className=\"rToggleBtn\" onClick={onTopToggleChange}>\r\n                      <FaEllipsisH />\r\n                    </button>\r\n                    {topToggle && (\r\n                      <div className=\"buttons\">\r\n                        <button onClick={handleDeleteSweet}>\r\n                          <FaTrash /> 삭제하기\r\n                        </button>\r\n                        <button onClick={() => setEditing((prev) => !prev)}>\r\n                          <FaPencilAlt /> 수정하기\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <p className=\"sweetDetailContent\">{sweet?.text.replace(regex, '')}</p>\r\n            {sweet?.attachmentUrl && <img alt=\"img\" src={sweet?.attachmentUrl} />}\r\n          </>\r\n        )}\r\n        <div className=\"sweetDetailInfo\">\r\n          <div className=\"commentText\">\r\n            <span>{sweet?.comments?.length}</span> 답글\r\n          </div>\r\n          <div>\r\n            <span>{sweet?.likes?.length}</span> 마음에 들어요\r\n          </div>\r\n        </div>\r\n        <SweetActionButtons\r\n          type=\"detail\"\r\n          id={params.id}\r\n          likes={sweet.likes}\r\n          liked={sweet.likes.includes(userObj?.uid)}\r\n          comments={sweet.comments}\r\n          handleLikeSweet={handleLikeSweet}\r\n          handleAddComment={() => {}}\r\n        />\r\n        <SweetComments\r\n          handleAddComment={handleAddComment}\r\n          handleDeleteComment={handleDeleteComment}\r\n          comments={sweet?.comments.sort((a, b) => b.createdAt - a.createdAt)}\r\n          userObj={userObj}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SweetDetail;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\nimport Message from 'routes/Message';\r\nimport SweetDetail from '../routes/SweetDetail';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj, darkMode, onDarkMode }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <>\r\n          <div className={darkMode ? 'test dark' : 'test'}>\r\n            <div className={darkMode ? 'left dark' : 'left'}>\r\n              {isLoggedIn && (\r\n                <Navigation\r\n                  userObj={userObj}\r\n                  darkMode={darkMode}\r\n                  onDarkMode={onDarkMode}\r\n                />\r\n              )}\r\n            </div>\r\n            {isLoggedIn ? (\r\n              <div className={darkMode ? 'right dark' : 'right'}>\r\n                <Route exact path=\"/\">\r\n                  <Home userObj={userObj} darkMode={darkMode} onDarkMode={onDarkMode} />\r\n                </Route>\r\n                <Route exact path=\"/sweet/:id\">\r\n                  <SweetDetail userObj={userObj} darkMode={darkMode} />\r\n                </Route>\r\n                <Route exact path=\"/profile/:uid\">\r\n                  <Profile\r\n                    userObj={userObj}\r\n                    refreshUser={refreshUser}\r\n                    darkMode={darkMode}\r\n                  />\r\n                </Route>\r\n                <Route exact path=\"/msg\">\r\n                  <Message userName={userObj.displayName} />\r\n                </Route>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Route exact path=\"/\">\r\n                  <Auth darkMode={darkMode} />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from './Router';\nimport { authService } from 'services/firebase/fbase';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { ModalProvider } from 'contexts/ModalContext';\nimport { UsersProfileProvider } from 'contexts/UsersProfileContext';\n\nfunction App() {\n  // console.log('유저의 로그인 여부', authService.currentUser);\n  const [init, setInit] = useState(false); // flase면 router 숨기기\n  // userObj의 제일 처음 출발점!\n  const [userObj, setUserObj] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n\n  // 처음 시작할 때. 컴포넌트가 mount 될 때\n  useEffect(() => {\n    // 사용자의 로그인 상태의 변화를 관찰하는 관찰자 추가\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        // console.log('App user', user);\n        setUserObj({\n          email: user.email,\n          displayName: user.displayName,\n          uid: user.uid,\n          photoURL: user.photoURL,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        // User is signed out\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  // firebase의 정보를 가지고 react를 업데이트\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    // console.log('refreshUser! user', user);\n    setUserObj({\n      email: user.email,\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  const onDarkMode = () => {\n    darkMode\n      ? (document.body.style = 'background-color: #fff8e5')\n      : (document.body.style = 'background-color: #193446');\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <UsersProfileProvider>\n      <ModalProvider>\n        {init ? (\n          <AppRouter\n            refreshUser={refreshUser}\n            isLoggedIn={Boolean(userObj)}\n            userObj={userObj}\n            darkMode={darkMode}\n            onDarkMode={onDarkMode}\n          />\n        ) : (\n          <div style={{ marginTop: 10 }}>Initializing....</div>\n        )}\n        {/* <footer>&copy; {new Date().getFullYear()} Switter</footer> */}\n      </ModalProvider>\n    </UsersProfileProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles.css';\n// import { Provider } from 'react-redux';\n// import store from 'services/store';\n// import { applyMiddleware, createStore } from 'redux';\n// import rootReducer from 'modules';\n// import ReduxThunk from 'redux-thunk';\n// // import logger from 'redux-logger';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// logger랑 다른 미들웨어 사용 시 logger를 맨 뒤에 설정. logger도 함수로 간주해 프린트함\n// const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(ReduxThunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}