{"version":3,"sources":["services/firebase/fbase.js","components/AuthForm.jsx","routes/Auth.jsx","utils.js","components/SweetEdit.jsx","hooks/useToggle.js","components/SweetShareButton.jsx","components/SweetComment.jsx","components/SweetComments.jsx","services/actions/sweetsAction.js","components/Sweet.jsx","components/SweetFactory.jsx","routes/Home.jsx","components/Navigation.jsx","routes/Profile.jsx","components/Message.jsx","routes/SweetDetail.jsx","components/Router.jsx","components/App.jsx","reportWebVitals.js","lib/asyncUtils.js","services/reducers/sweetsReducer.js","services/rootReducer.js","services/store.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","password","loginInputs","setLoginInputs","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","code","includes","className","type","placeholder","required","onClick","prev","Auth","darkMode","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","marginLeft","faGithub","shareSns","sns","id","pageUrl","window","open","displayedAt","createdAt","seconds","Date","minutes","Math","floor","hours","days","weeks","months","years","SweetEdit","text","closeEdit","newText","setNewText","e","autoFocus","maxLength","useToggle","toggleRef","toggle","setToggle","clickToggleOutside","current","contains","useEffect","document","addEventListener","SweetShareButton","onToggleChange","sweetId","ref","title","navigator","clipboard","writeText","alert","handleCopy","SweetComment","comment","isOwner","handleDeleteComment","faTimes","SweetComments","handleAddComment","comments","userObj","setComment","clearComment","onHandleAddComment","marginTop","map","uid","GET_SWEETS","GET_SWEETS_SUCCESS","GET_SWEETS_ERROR","CLEAR_SWEETS","CREATE_SWEET","DELETE_SWEET","LIKE_SWEET","UPDATE_SWEET","CREATE_SWEET_COMMENT","DELETE_SWEET_COMMENT","clearSweets","likeSweetAction","getSweets","dispatch","q","query","collection","orderBy","onSnapshot","snapshot","sweets","docs","doc","likes","payload","createSweet","sweetObj","addDoc","then","docRef","catch","err","deleteSweet","attachmentUrl","getState","sweetsReducer","find","sweet","deleteObject","deleteDoc","res","likeSweet","liked","updateDoc","filter","user","updateSweet","createSweetComment","now","displayName","deleteSweetComment","cid","Sweet","useDispatch","useRef","history","useHistory","sort","b","editing","setEditing","addComment","setAddComment","goToSweetDetail","currentTarget","push","dName","confirm","alt","src","length","SweetFactory","setSweet","attachment","setAttachment","fileRef","uuidv4","uploadString","uploadFile","getDownloadURL","creatorId","onsubmit","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","opacity","backgroundImage","Home","useSelector","state","loading","Navigation","onDarkMode","display","justifyContent","to","activeClassName","faHome","faUser","faEnvelope","faMoon","faEllipsisH","Profile","refreshUser","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","msgArr","Message","userName","setOpen","msg","setMsg","onOpen","fontWeight","alignItems","padding","marginRight","random","SweetDetail","topToggleRef","botToggleRef","params","useParams","topToggle","onTopToggleChange","botToggle","onBotToggleChange","handleSweetLike","split","replace","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","setDarkMode","onAuthStateChanged","args","Boolean","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducerUtils","prevState","initialState","action","rootReducer","combineReducers","middlewares","thunk","withExtraArgument","getFirebase","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b51bfab1.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst authService = getAuth();\r\nconst dbService = getFirestore();\r\nconst storageService = getStorage();\r\n\r\nexport { firebaseApp, authService, dbService, storageService };\r\n","import React, { useState } from 'react';\r\nimport { authService } from 'services/firebase/fbase';\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from 'firebase/auth';\r\n\r\nconst AuthForm = () => {\r\n  const [loginInputs, setLoginInputs] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const { email, password } = loginInputs;\r\n  const [error, setError] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setLoginInputs({\r\n      ...loginInputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create newAccount\r\n        data = await createUserWithEmailAndPassword(authService, email, password);\r\n      } else {\r\n        // log in\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      console.log('Auth data', data);\r\n    } catch (error) {\r\n      // console.log(error.message);\r\n      if (error.code.includes('weak-password')) {\r\n        setError('비밀번호는 6자 이상이어야 합니다.');\r\n      } else if (error.code.includes('wrong-password')) {\r\n        setError('비밀번호가 틀렸습니다.');\r\n      } else if (error.code.includes('user-not-found')) {\r\n        setError('가입되지 않는 이메일입니다.');\r\n      } else if (error.code.includes('email-already-in-use')) {\r\n        setError('이미 사용 중인 이메일입니다.');\r\n      } else if (error.code.includes('too-many')) {\r\n        setError('로그인 실패. 비밀번호를 재설정해주세요.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? '가입하기' : '로그인'}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? '로그인하기' : '이메일로 가입하기'}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from 'react';\r\nimport { authService } from 'services/firebase/fbase';\r\nimport { GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = ({ darkMode }) => {\r\n  const onSocialClick = async ({ target: { name } }) => {\r\n    let provider;\r\n    try {\r\n      if (name === 'google') {\r\n        provider = new GoogleAuthProvider();\r\n        await signInWithPopup(authService, provider);\r\n        // const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      } else if (name === 'github') {\r\n        provider = new GithubAuthProvider();\r\n        await signInWithPopup(authService, provider);\r\n        // const credential = GithubAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={darkMode ? 'authContainer dark' : 'authContainer'}>\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#9775fa'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Google로 로그인{' '}\r\n          <FontAwesomeIcon icon={faGoogle} color={'#fff'} style={{ marginLeft: 2 }} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Github로 로그인{' '}\r\n          <FontAwesomeIcon icon={faGithub} color={'#fff'} style={{ marginLeft: 2 }} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","export const shareSns = (sns, id) => {\r\n  const title = 'Switter';\r\n  const pageUrl = 'https://vanillovin.github.io/switter';\r\n\r\n  if (sns === 'twitter') {\r\n    window.open(\r\n      `https://twitter.com/intent/tweet?text=${title}&url=${pageUrl}/%23/sweet/${id}`,\r\n      'popup제목',\r\n      'width=500, height=400, scrollbars=yes'\r\n    );\r\n  } else if (sns === 'facebook') {\r\n    window.open(`http://www.facebook.com/sharer/sharer.php?u=${pageUrl}/%23/sweet/${id}`);\r\n  } else {\r\n    return;\r\n  }\r\n};\r\n\r\nexport function displayedAt(createdAt) {\r\n  const milliSeconds = new Date() - createdAt;\r\n  const seconds = milliSeconds / 1000;\r\n  if (seconds < 60) return `방금 전`;\r\n  const minutes = seconds / 60;\r\n  if (minutes < 60) return `${Math.floor(minutes)}분 전`;\r\n  const hours = minutes / 60;\r\n  if (hours < 24) return `${Math.floor(hours)}시간 전`;\r\n  const days = hours / 24;\r\n  if (days < 7) return `${Math.floor(days)}일 전`;\r\n  const weeks = days / 7;\r\n  if (weeks < 5) return `${Math.floor(weeks)}주 전`;\r\n  const months = days / 30;\r\n  if (months < 12) return `${Math.floor(months)}개월 전`;\r\n  const years = days / 365;\r\n  return `${Math.floor(years)}년 전`;\r\n}\r\n\r\n// export const getCreatedAt = () => {\r\n//   const month = new Date(sweetObj.createdAt).getMonth() + 1;\r\n//   const date = new Date(sweetObj.createdAt).getDate();\r\n//   const hour = new Date(sweetObj.createdAt).getHours();\r\n//   const min = new Date(sweetObj.createdAt).getMinutes();\r\n//   return `${displayedAt(sweetObj.createdAt)}`;\r\n// };\r\n","import React, { useState } from 'react';\r\n\r\nfunction SweetEdit({ text, onSubmit, closeEdit }) {\r\n  const [newText, setNewText] = useState(text);\r\n\r\n  const onChange = (e) => setNewText(e.target.value);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(newText);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"container sweetEdit\" onSubmit={handleSubmit}>\r\n        <textarea\r\n          className=\"formInput\"\r\n          type=\"text\"\r\n          placeholder=\"스윗 수정하기\"\r\n          name=\"sweet\"\r\n          required\r\n          autoFocus\r\n          value={newText}\r\n          onChange={onChange}\r\n          maxLength={500}\r\n        />\r\n        <input type=\"submit\" value=\"스윗 업데이트\" className=\"formBtn\" />\r\n      </form>\r\n      <button onClick={closeEdit} className=\"formBtn cancelBtn\">\r\n        취소\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SweetEdit;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction useToggle(toggleRef) {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const onToggleChange = () => setToggle((prev) => !prev);\r\n\r\n  const clickToggleOutside = (event) => {\r\n    if (!toggleRef.current?.contains(event.target)) {\r\n      setToggle(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (toggle) {\r\n      document.addEventListener('mousedown', clickToggleOutside);\r\n    }\r\n    return () => document.addEventListener('mousedown', clickToggleOutside);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [toggle]);\r\n\r\n  return [toggle, onToggleChange];\r\n}\r\n\r\nexport default useToggle;\r\n","import React from 'react';\r\nimport { FaFacebook, FaShare, FaTwitter } from 'react-icons/fa';\r\nimport { FiLink } from 'react-icons/fi';\r\nimport { shareSns } from 'utils';\r\n\r\nconst handleCopy = (sweetId) => {\r\n  navigator.clipboard.writeText(\r\n    `https://vanillovin.github.io/switter/#/sweet/${sweetId}`\r\n  );\r\n  alert('클립보드로 복사됐습니다');\r\n};\r\n\r\nfunction SweetShareButton({ toggle, toggleRef, onToggleChange, sweetId }) {\r\n  return (\r\n    <div className=\"toggles\" ref={toggleRef} title=\"공유하기\">\r\n      <button onClick={onToggleChange}>\r\n        <FaShare />\r\n      </button>\r\n      {toggle && (\r\n        <div title=\"링크 복사하기\" className=\"buttons\">\r\n          <button onClick={() => handleCopy(sweetId)}>\r\n            <FiLink /> 스윗 링크 복사하기\r\n          </button>\r\n          <button title=\"트위터에 공유하기\" onClick={() => shareSns('twitter', sweetId)}>\r\n            <FaTwitter /> 트위터에 공유하기\r\n          </button>\r\n          <button\r\n            title=\"페이스북에 공유하기\"\r\n            onClick={() => shareSns('facebook', sweetId)}\r\n          >\r\n            <FaFacebook /> 페이스북에 공유하기\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SweetShareButton;\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { displayedAt } from 'utils';\r\n\r\nfunction SweetComment({ comment, isOwner, handleDeleteComment }) {\r\n  const onHandleDeleteComment = () => handleDeleteComment(comment.createdAt);\r\n\r\n  return (\r\n    <div className=\"comment\" key={comment.createdAt}>\r\n      <div className=\"hello\">\r\n        <div className=\"info\">\r\n          <span className=\"dname\">{comment.name || '♥'}</span>\r\n          <span className=\"mini\">{displayedAt(comment.createdAt)}</span>\r\n        </div>\r\n        {isOwner && (\r\n          <button className=\"delcommentBtn\" onClick={onHandleDeleteComment}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"ctext\">{comment.text}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SweetComment;\r\n","import React, { useState } from 'react';\r\nimport SweetComment from './SweetComment';\r\n\r\nfunction SweetComments({ handleAddComment, handleDeleteComment, comments, userObj }) {\r\n  const [comment, setComment] = useState('');\r\n\r\n  const onChange = (e) => setComment(e.target.value);\r\n\r\n  const clearComment = () => setComment('');\r\n\r\n  const onHandleAddComment = (e) => {\r\n    e.preventDefault();\r\n    handleAddComment(comment, clearComment);\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <div style={{ marginTop: 10 }}>\r\n        <form className=\"commentForm\" onSubmit={onHandleAddComment}>\r\n          <div className=\"commentInput__container\">\r\n            <input\r\n              className=\"commentInput__input\"\r\n              type=\"text\"\r\n              name=\"comment\"\r\n              value={comment}\r\n              onChange={onChange}\r\n              placeholder=\"댓글 달기\"\r\n              required\r\n            />\r\n            <input\r\n              className=\"commentInput__arrow\"\r\n              type=\"submit\"\r\n              value=\"&rarr;\"\r\n              onSubmit={onHandleAddComment}\r\n            />\r\n          </div>\r\n        </form>\r\n        <div className=\"comments\">\r\n          {comments?.map((comment) => (\r\n            <SweetComment\r\n              key={comment.createdAt}\r\n              comment={comment}\r\n              isOwner={comment.uid === userObj.uid}\r\n              handleDeleteComment={handleDeleteComment}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SweetComments;\r\n","import {\r\n  addDoc,\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  getFirestore,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n  updateDoc,\r\n} from 'firebase/firestore';\r\nimport { deleteObject, ref } from 'firebase/storage';\r\nimport { dbService, storageService } from 'services/firebase/fbase';\r\n\r\n// Action\r\nexport const GET_SWEETS = 'GET_SWEETS';\r\nexport const GET_SWEETS_SUCCESS = 'GET_SWEETS_SUCCESS';\r\nexport const GET_SWEETS_ERROR = 'GET_SWEETS_ERROR';\r\nexport const CLEAR_SWEETS = 'CLEAR_SWEETS';\r\nexport const CLEAR_SWEET = 'CLEAR_SWEET';\r\nexport const CREATE_SWEET = 'CREATE_SWEET';\r\nexport const DELETE_SWEET = 'DELETE_SWEET';\r\nexport const LIKE_SWEET = 'LIKE_SWEET';\r\nexport const UPDATE_SWEET = 'UPDATE_SWEET';\r\nexport const CREATE_SWEET_COMMENT = 'CREATE_SWEET_COMMENT';\r\nexport const DELETE_SWEET_COMMENT = 'DELETE_SWEET_COMMENT';\r\n\r\n// Action Creators\r\nexport const clearSweets = () => ({ type: CLEAR_SWEETS });\r\nexport const clearSweet = () => ({ type: CLEAR_SWEET });\r\nexport const getSweetsAction = (type, payload) => {\r\n  return { type: GET_SWEETS, payload };\r\n};\r\nexport const createSweetAction = () => ({ type: CREATE_SWEET });\r\nexport const deleteSweetAction = () => ({ type: DELETE_SWEET });\r\nexport const likeSweetAction = () => ({ type: LIKE_SWEET });\r\nexport const updateSweetAction = () => ({ type: UPDATE_SWEET });\r\nexport const createSweetCommentAction = () => ({ type: CREATE_SWEET_COMMENT });\r\nexport const deleteSweetCommentAction = () => ({ type: DELETE_SWEET_COMMENT });\r\n\r\nexport const getSweets = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: GET_SWEETS });\r\n    try {\r\n      const q = query(collection(getFirestore(), 'sweets'), orderBy('createdAt', 'desc'));\r\n      onSnapshot(q, (snapshot) => {\r\n        const sweets = snapshot.docs.map((doc) => {\r\n          return {\r\n            id: doc.id,\r\n            likes: doc.data().likes,\r\n            comments: doc.data().comments,\r\n            ...doc.data(),\r\n          };\r\n        });\r\n        dispatch({ type: GET_SWEETS_SUCCESS, payload: sweets });\r\n      });\r\n    } catch (e) {\r\n      console.log('getSweetsData error', e);\r\n      dispatch({\r\n        type: GET_SWEETS_ERROR,\r\n        payload: e,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const createSweet = (sweetObj) => {\r\n  return function (dispatch) {\r\n    addDoc(collection(dbService, 'sweets'), sweetObj)\r\n      .then((docRef) => {\r\n        dispatch({ type: CREATE_SWEET });\r\n      })\r\n      .catch((err) => {\r\n        console.log('createSweet err', err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteSweet = (id, attachmentUrl) => (dispatch, getState) => {\r\n  const sweetData = getState().sweetsReducer.sweets.data.find((sweet) => sweet.id === id);\r\n  if (!sweetData) return;\r\n  if (attachmentUrl !== '') {\r\n    deleteObject(ref(storageService, attachmentUrl));\r\n  }\r\n  deleteDoc(doc(dbService, `sweets/${id}`))\r\n    .then((res) => {\r\n      dispatch(deleteSweetAction());\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const likeSweet = (sweetObj, liked, uid) => (dispatch) => {\r\n  if (!liked) {\r\n    updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n      likes: [...sweetObj.likes, uid],\r\n    })\r\n      .then((res) => {\r\n        dispatch(likeSweetAction());\r\n      })\r\n      .catch((err) => {\r\n        console.log('likeSweet err', err);\r\n      });\r\n  } else {\r\n    updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n      likes: sweetObj.likes.filter((user) => user !== uid),\r\n    })\r\n      .then((res) => {\r\n        dispatch(likeSweetAction());\r\n      })\r\n      .catch((err) => {\r\n        console.log('likeSweet err', err);\r\n      });\r\n  }\r\n};\r\n\r\nexport const updateSweet = (id, text) => (dispatch, getState) => {\r\n  const sweetData = getState().sweetsReducer.sweets.data.find((sweet) => sweet.id === id);\r\n  if (!sweetData.id) return;\r\n  updateDoc(doc(dbService, `sweets/${id}`), { text })\r\n    .then((res) => {\r\n      dispatch(updateSweetAction());\r\n    })\r\n    .catch((err) => {\r\n      console.log('err', err);\r\n    });\r\n};\r\n\r\nexport const createSweetComment = (sweetObj, userObj, comment) => (dispatch) => {\r\n  updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n    comments: [\r\n      ...sweetObj.comments,\r\n      {\r\n        uid: userObj.uid,\r\n        createdAt: Date.now(),\r\n        name: userObj.displayName,\r\n        text: comment,\r\n      },\r\n    ],\r\n  })\r\n    .then((res) => {\r\n      dispatch(createSweetCommentAction());\r\n    })\r\n    .catch((err) => {\r\n      console.log('createSweetComment error', err);\r\n    });\r\n};\r\n\r\nexport const deleteSweetComment = (sweetObj, cid) => (dispatch) => {\r\n  updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n    comments: sweetObj.comments.filter((comment) => comment.createdAt !== cid),\r\n  })\r\n    .then((res) => {\r\n      dispatch(deleteSweetCommentAction());\r\n    })\r\n    .catch((err) => {\r\n      console.log('deleteSweetComment error', err);\r\n    });\r\n};\r\n","import React, { useRef, useState } from 'react';\r\nimport { FaComment, FaPencilAlt, FaTrash, FaHeart } from 'react-icons/fa';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { displayedAt } from 'utils';\r\nimport SweetEdit from './SweetEdit';\r\nimport useToggle from 'hooks/useToggle';\r\nimport SweetShareButton from './SweetShareButton';\r\nimport SweetComments from './SweetComments';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  createSweetComment,\r\n  deleteSweet,\r\n  deleteSweetComment,\r\n  likeSweet,\r\n  updateSweet,\r\n} from 'services/actions/sweetsAction';\r\n\r\nconst Sweet = ({ userObj, sweetObj, isOwner, darkMode }) => {\r\n  const dispatch = useDispatch();\r\n  const toggleRef = useRef();\r\n  const history = useHistory();\r\n  const comments = sweetObj.comments.sort((a, b) => b.createdAt - a.createdAt);\r\n  const [editing, setEditing] = useState(false);\r\n  const [addComment, setAddComment] = useState(false);\r\n  const [toggle, onToggleChange] = useToggle(toggleRef);\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const goToSweetDetail = (e) => {\r\n    if (e.target !== e.currentTarget) return;\r\n    // e.stopImmediatePropagation();\r\n    history.push(`/sweet/${sweetObj.id}`);\r\n  };\r\n\r\n  const handleDeleteSweet = () => {\r\n    if (!window.confirm('스윗을 삭제하시겠습니까?')) return;\r\n    dispatch(deleteSweet(sweetObj.id, sweetObj.attachmentUrl));\r\n  };\r\n\r\n  const handleUpdateSweet = (text) => {\r\n    dispatch(updateSweet(sweetObj.id, text));\r\n    setEditing(false);\r\n  };\r\n\r\n  const handleSweetLike = () => {\r\n    const liked = sweetObj.likes.includes(userObj.uid);\r\n    dispatch(likeSweet(sweetObj, liked, userObj.uid));\r\n  };\r\n\r\n  const handleAddComment = (comment, clearComment) => {\r\n    if (comment === '') return;\r\n    dispatch(createSweetComment(sweetObj, userObj, comment));\r\n    clearComment();\r\n  };\r\n\r\n  const handleDeleteComment = (cid) => {\r\n    if (!window.confirm('댓글을 삭제하시겠습니까?')) return;\r\n    // console.log('comment', uid, 'delete comment createdAt', cid);\r\n    dispatch(deleteSweetComment(sweetObj, cid));\r\n  };\r\n\r\n  return (\r\n    <div className={darkMode ? 'sweet dark' : 'sweet'} onClick={goToSweetDetail}>\r\n      {editing ? (\r\n        <SweetEdit\r\n          text={sweetObj.text}\r\n          onSubmit={handleUpdateSweet}\r\n          closeEdit={() => setEditing(false)}\r\n        />\r\n      ) : (\r\n        <>\r\n          <div className=\"hello\">\r\n            <div className=\"info\">\r\n              <span className=\"dname\">{sweetObj.dName || '♥'}</span>\r\n              <span className=\"mini\">{displayedAt(sweetObj.createdAt)}</span>\r\n            </div>\r\n            {isOwner && (\r\n              <div className=\"sweet__actions\">\r\n                <span onClick={handleDeleteSweet}>\r\n                  <FaTrash />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FaPencilAlt />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <p className=\"sweet__text\" onClick={goToSweetDetail}>\r\n            {sweetObj.text}\r\n          </p>\r\n          {sweetObj.attachmentUrl && (\r\n            <img alt=\"img\" src={sweetObj.attachmentUrl} onClick={goToSweetDetail} />\r\n          )}\r\n          <>\r\n            <div className=\"bottom\">\r\n              <button onClick={handleSweetLike}>\r\n                <FaHeart color={sweetObj.likes.includes(userObj.uid) ? '#e05d5d' : ''} />\r\n                <span>{` ${sweetObj.likes.length}`}</span>\r\n              </button>\r\n              <button onClick={() => setAddComment(!addComment)}>\r\n                <FaComment />\r\n                <span>{` ${sweetObj.comments.length}`}</span>\r\n              </button>\r\n              <SweetShareButton\r\n                toggle={toggle}\r\n                toggleRef={toggleRef}\r\n                onToggleChange={onToggleChange}\r\n                sweetId={sweetObj.id}\r\n              />\r\n            </div>\r\n            {addComment && (\r\n              <SweetComments\r\n                handleAddComment={handleAddComment}\r\n                handleDeleteComment={handleDeleteComment}\r\n                comments={comments}\r\n                userObj={userObj}\r\n              />\r\n            )}\r\n          </>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sweet;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { storageService } from 'services/firebase/fbase';\r\nimport { ref, uploadString, getDownloadURL } from '@firebase/storage';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createSweet } from 'services/actions/sweetsAction';\r\n\r\nconst SweetFactory = ({ userObj, darkMode }) => {\r\n  const [sweet, setSweet] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (sweet === '') return;\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      // 파일 경로 참조 만들기\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      // storage 참조 경로로 파일 업로드 하기\r\n      const uploadFile = await uploadString(fileRef, attachment, 'data_url');\r\n      console.log(uploadFile);\r\n      // storage에 있는 파일 URL로 다운로드 받기\r\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n    }\r\n\r\n    // 트윗할 때, 메시지와 사진도 같이 firestore에 생성\r\n    const sweetObj = {\r\n      text: sweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n      dName: userObj.displayName,\r\n      email: userObj.email,\r\n      likes: [],\r\n      comments: [],\r\n    };\r\n\r\n    // await addDoc(collection(dbService, 'sweets'), sweetObj);\r\n    dispatch(createSweet(sweetObj));\r\n\r\n    setSweet('');\r\n    setAttachment('');\r\n  };\r\n\r\n  const onChange = ({ target: { value } }) => {\r\n    setSweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader(); // fileReader API 파일 이름을 읽음\r\n    reader.onloadend = (finishedEvent) => {\r\n      // console.log('finishedEvent', finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment('');\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className={darkMode ? 'factoryForm dark' : 'factoryForm'}>\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={sweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"무슨 달콤한 생각을 하고 있나요?\"\r\n          maxLength={120}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"&rarr;\"\r\n          className=\"factoryInput__arrow\"\r\n          onSubmit={onsubmit}\r\n        />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>사진 선택하기</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            alt=\"img\"\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>제거하기</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SweetFactory;\r\n","import React, { useEffect } from 'react';\r\nimport Sweet from 'components/Sweet';\r\nimport SweetFactory from 'components/SweetFactory';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearSweets, getSweets } from 'services/actions/sweetsAction';\r\n\r\nfunction Home({ userObj, darkMode }) {\r\n  const {\r\n    loading,\r\n    data: sweets,\r\n    error,\r\n  } = useSelector((state) => state.sweetsReducer.sweets);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getSweets());\r\n    return () => {\r\n      dispatch(clearSweets());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  // console.log('Home', '{ loading:', loading, ', data:', sweets, ', error:', error, ' }');\r\n\r\n  if (error) return <div>에러 발생! {error}</div>;\r\n\r\n  return !loading ? (\r\n    <div className={darkMode ? 'container dark' : 'container'}>\r\n      <SweetFactory userObj={userObj} darkMode={darkMode} />\r\n      <div style={{ marginTop: 30 }} className=\"sweet-container\">\r\n        {sweets?.map((sweet) => (\r\n          <Sweet\r\n            key={sweet.id}\r\n            userObj={userObj}\r\n            sweetObj={sweet}\r\n            isOwner={sweet.creatorId === userObj.uid}\r\n            darkMode={darkMode}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div>loading...</div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n  faEllipsisH,\r\n  faEnvelope,\r\n  faHome,\r\n  faMoon,\r\n  faUser,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj, darkMode, onDarkMode }) => {\r\n  return (\r\n    <nav className={darkMode ? 'nav dark' : 'nav'}>\r\n      {/* <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}> */}\r\n      <ul style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <li className=\"logo\">\r\n          <NavLink to=\"/\" className=\"navlink\" activeClassName=\"\">\r\n            <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n            <span>♥</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"home\">\r\n          <NavLink to=\"/\" className=\"navlink\" activeClassName=\"\">\r\n            <FontAwesomeIcon icon={faHome} size=\"2x\" />\r\n            <span>home</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"profile\">\r\n          <NavLink className=\"navlink\" activeClassName=\"\" to=\"/profile\">\r\n            <FontAwesomeIcon icon={faUser} size=\"2x\" />\r\n            <span>{userObj.displayName ? `${userObj.displayName}` : '♥'}</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"msg\">\r\n          <NavLink to=\"/msg\" className=\"navlink\" activeClassName=\"active\">\r\n            <FontAwesomeIcon icon={faEnvelope} size=\"2x\" />\r\n            <span>{'+1'}</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"dark navlink\" onClick={onDarkMode}>\r\n          <FontAwesomeIcon\r\n            icon={faMoon}\r\n            size=\"2x\"\r\n            color={darkMode ? '#e9c77b' : '#000000cc'}\r\n          />\r\n          <span>{darkMode ? 'light' : 'dark'}</span>\r\n        </li>\r\n        <li className=\"more navlink\">\r\n          <FontAwesomeIcon icon={faEllipsisH} size=\"2x\" />\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { authService } from 'services/firebase/fbase';\r\nimport { signOut, updateProfile } from '@firebase/auth';\r\n// import { collection, getDocs, orderBy, query, where } from '@firebase/firestore';\r\n\r\nconst Profile = ({ refreshUser, userObj, darkMode }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    signOut(authService); // auth.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const onChange = ({ target: { value } }) => {\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  // updateProfile 2 update - displayName, photoURL\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n        // photoURL: 'https://example.com/jane-q-user/profile.jpg',\r\n      })\r\n        .then(() => {\r\n          // Profile updated!\r\n          refreshUser();\r\n        })\r\n        .catch((error) => {\r\n          // An error occurred\r\n        });\r\n    }\r\n  };\r\n\r\n  // const getMySweets = async () => {\r\n  //   const q = query(\r\n  //     collection(dbService, 'sweets'),\r\n  //     where('creatorId', '==', userObj.uid) // 필터링\r\n  //   );\r\n  //   const querySnapshot = await getDocs(q);\r\n  //   querySnapshot.forEach((doc) => {\r\n  //     console.log(doc.id, ' => ', doc.data());\r\n  //   });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getMySweets();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <div style={{ fontWeight: 'bold' }}>{userObj.displayName}</div>\r\n      <div>{userObj.email}</div> */}\r\n      <form onSubmit={onSubmit} className={darkMode ? 'profileForm dark' : 'profileForm'}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName || ''}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"프로필 업데이트\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn logOut\" onClick={onLogOutClick}>\r\n        로그아웃\r\n      </span>\r\n    </div>\r\n    // <>\r\n    //   <form onSubmit={onSubmit}>\r\n    //     <input\r\n    //       onChange={onChange}\r\n    //       type=\"test\"\r\n    //       placeholder=\"Display name\"\r\n    //       value={newDisplayName}\r\n    //     />\r\n    //     <input type=\"submit\" value=\"Updata Profile\" />\r\n    //   </form>\r\n    //   <button onClick={onLogOutClick}>Log Out</button>\r\n    // </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\n\r\nexport const msgArr = [\r\n  '누군가를 사랑하고자 한다면 너 자신을 먼저 사랑해야 해',\r\n  '앞이 보이지 않을 때는 지금 할 수 있는 일을 하면 돼',\r\n  '진정한 아름다움은 내면에 있어',\r\n  '그렇게 구경만 하다가는 네 인생이 너 없이 흘러가는 걸 구경하게 될걸',\r\n  '마음만을 가지고 있어서는 안 된다. 반드시 실천해야 한다',\r\n  '소심해질 시간 없어 용감하고 대담하게 해',\r\n  '기억해 너는 세상을 빛으로 가득 채울 수 있는 존재란 걸',\r\n  '사랑은 누군가를 나보다 먼저 두는 거야',\r\n  '용기를 내',\r\n  '행운을 빌어',\r\n  '너에게는 아직 꿈을 이루기 위한 충분한 시간이 있어',\r\n  '힘내. 인생은 한순간에 바뀌기도 하는 거니까',\r\n  '큰 희망이 큰 사람을 만든다',\r\n  '가끔은 옳은 길이 가장 쉬운 길이 아닐 때도 있지',\r\n  '절대로 고개를 떨구지 말라 고개를 치켜들고 세상을 똑바로 보라',\r\n  '시간은 아무도 기다려주지 않아',\r\n  '아름다움은 사라져 버리지만 마음에서 우러나는 것은 사라지지 않아. 유머, 친절함, 용기',\r\n  '중요한 건 겉모습이 아닌 마음이야',\r\n  '간절히 바라는 마음이 있어야 마법이 일어날 수 있어',\r\n  '역경을 이겨내고 핀 꽃이 가장 아름다운 꽃이란다',\r\n  '눈을 감지 말고 똑바로 봐. 두려움의 실체는 생각과 다를 수 있어',\r\n  '젊게 사는 건 절대 늦은 나이란 없어',\r\n  '널 억누르던 것들이 널 일으켜 줄 거야',\r\n  '행복이 네가 있는 곳에 있다는 걸 깨닫게 되는 날이 올 거야',\r\n  '누구든 무엇이든 될 수 있어',\r\n  '너의 가족이 널 얼마나 사랑하는지 잊지 마',\r\n  '익숙한 곳을 벗어나서 모험해',\r\n  '인생은 가능성으로 가득 차 있어',\r\n  '매일 행복할 순 없지만, 행복한 것들은 매일 있어',\r\n  '최고의 순간은 갑자기 찾아오는 거야',\r\n];\r\n\r\nconst Message = ({ userName }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [msg, setMsg] = useState(`${userName || 'hey'} 클릭해봐 :)`);\r\n\r\n  const onOpen = () => setOpen(!open);\r\n\r\n  const randomMsg = () => setMsg(msgArr[Math.floor(Math.random() * msgArr.length)]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"msg-container\">\r\n        <div className=\"msgh\">\r\n          <span>Message</span>\r\n        </div>\r\n\r\n        {open ? (\r\n          <div className=\"msgs\" onClick={onOpen}>\r\n            <div className=\"chat\">\r\n              <div style={{ fontWeight: 'bold', marginBottom: 12 }}>\r\n                <FontAwesomeIcon icon={faUser} /> {'익명'}\r\n              </div>\r\n              <span>{msg}</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"back\" onClick={onOpen}>\r\n              {open ? '' : '←'}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                padding: 20,\r\n              }}\r\n            >\r\n              <div style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faUser} color=\"black\" />\r\n              </div>\r\n              <div className=\"mymsg\" onClick={randomMsg}>\r\n                <span>{msg}</span>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { AiFillHeart, AiOutlineHeart } from 'react-icons/ai';\r\nimport { FaComment, FaPencilAlt, FaTrash, FaEllipsisH } from 'react-icons/fa';\r\n\r\nimport useToggle from 'hooks/useToggle';\r\nimport SweetShareButton from '../components/SweetShareButton';\r\nimport SweetComments from '../components/SweetComments';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  clearSweets,\r\n  createSweetComment,\r\n  deleteSweet,\r\n  deleteSweetComment,\r\n  getSweets,\r\n  likeSweet,\r\n  updateSweet,\r\n} from 'services/actions/sweetsAction';\r\nimport SweetEdit from 'components/SweetEdit';\r\n\r\nfunction SweetDetail({ userObj, darkMode }) {\r\n  const dispatch = useDispatch();\r\n  const topToggleRef = useRef();\r\n  const botToggleRef = useRef();\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const [editing, setEditing] = useState(false);\r\n  const [topToggle, onTopToggleChange] = useToggle(topToggleRef);\r\n  const [botToggle, onBotToggleChange] = useToggle(botToggleRef);\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  const {\r\n    loading,\r\n    data: sweets,\r\n    error,\r\n  } = useSelector((state) => state.sweetsReducer.sweets);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSweets());\r\n    return () => {\r\n      dispatch(clearSweets());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const sweet = sweets?.filter((sweet) => sweet.id === params.id)[0];\r\n\r\n  const isOwner = sweet?.creatorId === userObj.uid;\r\n\r\n  // console.log('Detail', '{loading:', loading, ', data:', sweet, ', error:', error, '}');\r\n\r\n  const handleDeleteSweet = () => {\r\n    if (!window.confirm('스윗을 삭제하시겠습니까?')) return;\r\n    dispatch(deleteSweet(sweet.id, sweet.attachmentUrl));\r\n    history.push('/');\r\n  };\r\n\r\n  const handleSweetLike = async () => {\r\n    const liked = sweet.likes.includes(userObj.uid);\r\n    dispatch(likeSweet(sweet, liked, userObj.uid));\r\n  };\r\n\r\n  const handleUpdateSweet = (text) => {\r\n    dispatch(updateSweet(sweet.id, text));\r\n    setEditing(false);\r\n  };\r\n\r\n  const handleAddComment = (comment, clearComment) => {\r\n    if (comment === '') return;\r\n    dispatch(createSweetComment(sweet, userObj, comment));\r\n    clearComment();\r\n  };\r\n\r\n  const handleDeleteComment = async (cid) => {\r\n    if (!window.confirm('댓글을 삭제하시겠습니까?')) return;\r\n    // console.log('comment', uid, 'delete comment createdAt', cid);\r\n    dispatch(deleteSweetComment(sweet, cid));\r\n  };\r\n\r\n  const regex = /[\\s\\uFEFF\\xA0]+$/gi;\r\n\r\n  if (error) return <div>에러 발생! {error}</div>;\r\n\r\n  return !loading ? (\r\n    <div className={darkMode ? 'sweetDetailContainer dark' : 'sweetDetailContainer'}>\r\n      <div className=\"sweetDetailTop\">\r\n        <button onClick={() => history.push('/')}>←</button>\r\n        스레드\r\n      </div>\r\n      <div className=\"sweetDetail\">\r\n        {editing ? (\r\n          <SweetEdit\r\n            text={sweet.text}\r\n            onSubmit={handleUpdateSweet}\r\n            closeEdit={() => setEditing(false)}\r\n          />\r\n        ) : (\r\n          <>\r\n            <div className=\"sweetDetailTopInfo\" onClick={() => {}}>\r\n              <div className=\"userInfo\">\r\n                <div className=\"profile\"></div>\r\n                <div className=\"text\">\r\n                  <span className=\"dname\">{sweet?.dName || '♥'}</span>\r\n                  <span className=\"email\">@{sweet?.email?.split('@')[0]}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"rightButtons\" ref={topToggleRef}>\r\n                {isOwner && (\r\n                  <>\r\n                    <button onClick={onTopToggleChange}>\r\n                      <FaEllipsisH />\r\n                    </button>\r\n                    {topToggle && (\r\n                      <div className=\"buttons\">\r\n                        <button onClick={handleDeleteSweet}>\r\n                          <FaTrash /> 삭제하기\r\n                        </button>\r\n                        <button onClick={toggleEditing}>\r\n                          <FaPencilAlt /> 수정하기\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <p className=\"sweetDetailContent\">{sweet?.text.replace(regex, '')}</p>\r\n            {sweet?.attachmentUrl && <img alt=\"img\" src={sweet?.attachmentUrl} />}\r\n          </>\r\n        )}\r\n        <div className=\"sweetDetailInfo\">\r\n          <div className=\"commentText\">\r\n            <span>{sweet?.comments?.length}</span> 답글\r\n          </div>\r\n          <div>\r\n            <span>{sweet?.likes?.length}</span> 마음에 들어요\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sweetDetailActions\">\r\n          <button title=\"마음에 들어요\" onClick={handleSweetLike}>\r\n            {sweet?.likes?.includes(userObj.uid) ? <AiFillHeart /> : <AiOutlineHeart />}\r\n          </button>\r\n          <button title=\"답글\">\r\n            <FaComment />\r\n          </button>\r\n          <SweetShareButton\r\n            toggle={botToggle}\r\n            toggleRef={botToggleRef}\r\n            onToggleChange={onBotToggleChange}\r\n            sweetId={sweet?.id}\r\n          />\r\n        </div>\r\n\r\n        <SweetComments\r\n          handleAddComment={handleAddComment}\r\n          handleDeleteComment={handleDeleteComment}\r\n          comments={sweet?.comments}\r\n          userObj={userObj}\r\n        />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div>loading...</div>\r\n  );\r\n}\r\n\r\nexport default SweetDetail;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\nimport Message from 'components/Message';\r\nimport SweetDetail from '../routes/SweetDetail';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj, darkMode, onDarkMode }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <>\r\n          <div className={darkMode ? 'test dark' : 'test'}>\r\n            <div className={darkMode ? 'left dark' : 'left'}>\r\n              {isLoggedIn && (\r\n                <Navigation\r\n                  userObj={userObj}\r\n                  darkMode={darkMode}\r\n                  onDarkMode={onDarkMode}\r\n                />\r\n              )}\r\n            </div>\r\n            {isLoggedIn ? (\r\n              <div className={darkMode ? 'right dark' : 'right'}>\r\n                <Route exact path=\"/\">\r\n                  <Home userObj={userObj} darkMode={darkMode} onDarkMode={onDarkMode} />\r\n                </Route>\r\n                <Route exact path=\"/sweet/:id\">\r\n                  <SweetDetail userObj={userObj} darkMode={darkMode} />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                  <Profile\r\n                    userObj={userObj}\r\n                    refreshUser={refreshUser}\r\n                    darkMode={darkMode}\r\n                  />\r\n                </Route>\r\n                <Route exact path=\"/msg\">\r\n                  <Message userName={userObj.displayName} />\r\n                </Route>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Route exact path=\"/\">\r\n                  <Auth darkMode={darkMode} />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from './Router';\nimport { authService } from 'services/firebase/fbase';\nimport { onAuthStateChanged } from 'firebase/auth';\n\nfunction App() {\n  // console.log('유저의 로그인 여부', authService.currentUser);\n  const [init, setInit] = useState(false); // flase면 router 숨기기\n  // userObj의 제일 처음 출발점!\n  const [userObj, setUserObj] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n\n  // 처음 시작할 때. 컴포넌트가 mount 될 때\n  useEffect(() => {\n    // 사용자의 로그인 상태의 변화를 관찰하는 관찰자 추가\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        // setUserObj(user);\n        setUserObj({\n          email: user.email,\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        // User is signed out\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  // firebase의 정보를 가지고 react를 업데이트\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      email: user.email,\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  const onDarkMode = () => {\n    darkMode\n      ? (document.body.style = 'background-color: #fff8e5')\n      : (document.body.style = 'background-color: #193446');\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          darkMode={darkMode}\n          onDarkMode={onDarkMode}\n        />\n      ) : (\n        <div style={{ marginTop: 10 }}>Initializing....</div>\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Switter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const reducerUtils = {\r\n  initial: (data = null) => ({\r\n    loading: false,\r\n    data,\r\n    error: null,\r\n  }),\r\n  loading: (prevState = null) => ({\r\n    loading: true,\r\n    // 상황에 따라 로딩 값만 바꾸고 싶고 기본 값은 유지\r\n    data: prevState,\r\n    error: null,\r\n  }),\r\n  success: (data) => ({\r\n    loading: false,\r\n    data,\r\n    error: null,\r\n  }),\r\n  error: (error) => ({\r\n    loading: false,\r\n    data: null,\r\n    error,\r\n  }),\r\n};\r\n","import { reducerUtils } from 'lib/asyncUtils';\r\nimport {\r\n  GET_SWEETS,\r\n  GET_SWEETS_ERROR,\r\n  GET_SWEETS_SUCCESS,\r\n  CREATE_SWEET,\r\n  CLEAR_SWEETS,\r\n  DELETE_SWEET,\r\n  LIKE_SWEET,\r\n  UPDATE_SWEET,\r\n  CREATE_SWEET_COMMENT,\r\n  DELETE_SWEET_COMMENT,\r\n} from 'services/actions/sweetsAction';\r\n\r\nconst initialState = {\r\n  sweets: {\r\n    loading: false,\r\n    data: null,\r\n    error: null,\r\n  },\r\n};\r\n\r\nconst sweetsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_SWEETS:\r\n      return {\r\n        ...state,\r\n        // 만약 여기에 기존 상태 값을 유지하고 싶다면 (state.sweets.data)\r\n        sweets: reducerUtils.loading(),\r\n      };\r\n    case GET_SWEETS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        sweets: reducerUtils.success(action.payload),\r\n      };\r\n    case GET_SWEETS_ERROR:\r\n      return {\r\n        ...state,\r\n        sweets: reducerUtils.error(action.payload),\r\n      };\r\n    case CLEAR_SWEETS:\r\n      return {\r\n        ...state,\r\n        sweets: reducerUtils.initial(),\r\n      };\r\n    case CREATE_SWEET:\r\n      return state;\r\n    case DELETE_SWEET:\r\n      return state;\r\n    case LIKE_SWEET:\r\n      return state;\r\n    case UPDATE_SWEET:\r\n      return state;\r\n    case CREATE_SWEET_COMMENT:\r\n      return state;\r\n    case DELETE_SWEET_COMMENT:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sweetsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport sweetsReducer from './reducers/sweetsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  sweetsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './rootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { getFirebase } from 'react-redux-firebase';\r\n\r\nconst middlewares = [thunk.withExtraArgument(getFirebase)];\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles.css';\nimport { Provider } from 'react-redux';\nimport store from 'services/store';\n// import { applyMiddleware, createStore } from 'redux';\n// import rootReducer from 'modules';\n// import ReduxThunk from 'redux-thunk';\n// // import logger from 'redux-logger';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// logger랑 다른 미들웨어 사용 시 logger를 맨 뒤에 설정. logger도 함수로 간주해 프린트함\n// const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(ReduxThunk)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}