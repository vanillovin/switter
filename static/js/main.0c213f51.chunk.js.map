{"version":3,"sources":["fbase.js","components/AuthForm.jsx","routes/Auth.jsx","utils/time.js","components/SweetComment.jsx","components/Sweet.jsx","components/SweetFactory.jsx","routes/Home.jsx","components/Navigation.jsx","routes/Profile.jsx","components/Message.jsx","components/Router.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","password","loginInputs","setLoginInputs","error","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","code","includes","className","type","placeholder","required","onClick","prev","Auth","darkMode","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","GithubAuthProvider","icon","faTwitter","color","size","style","marginBottom","faGoogle","marginLeft","faGithub","displayedAt","createdAt","seconds","Date","minutes","Math","floor","hours","days","weeks","months","years","SweetComment","handleAddComment","handleDeleteComment","comment","comments","userObj","marginTop","map","uid","faTimes","text","Sweet","sweetObj","isOwner","sort","b","sweet","setText","editing","setEditing","addComment","setAddComment","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","e","updateDoc","like","likes","filter","user","getCount","count","i","length","now","displayName","cid","autoFocus","dName","faTrash","faPencilAlt","alt","src","faHeart","faComment","title","thisUrl","document","URL","url","encodeURIComponent","open","faShare","SweetFactory","setSweet","attachment","setAttachment","fileRef","uuidv4","uploadString","uploadFile","getDownloadURL","creatorId","addDoc","collection","maxLength","onsubmit","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","Home","sweets","setSweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","snapshot","sweetArray","docs","Navigation","onDarkMode","display","justifyContent","to","activeClassName","faHome","faUser","faEnvelope","faMoon","faEllipsisH","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","currentUser","then","catch","signOut","push","msgArr","Message","userName","setOpen","msg","setMsg","onOpen","fontWeight","alignItems","padding","marginRight","random","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","setDarkMode","onAuthStateChanged","args","Boolean","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c213f51.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getStorage } from 'firebase/storage';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from 'firebase/auth';\r\n\r\nconst AuthForm = () => {\r\n  const [loginInputs, setLoginInputs] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const { email, password } = loginInputs;\r\n  const [error, setError] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setLoginInputs({\r\n      ...loginInputs,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create newAccount\r\n        data = await createUserWithEmailAndPassword(authService, email, password);\r\n      } else {\r\n        // log in\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      console.log('Auth data', data);\r\n    } catch (error) {\r\n      // console.log(error.message);\r\n      if (error.code.includes('weak-password')) {\r\n        setError('비밀번호는 6자 이상이어야 합니다.');\r\n      } else if (error.code.includes('wrong-password')) {\r\n        setError('비밀번호가 틀렸습니다.');\r\n      } else if (error.code.includes('user-not-found')) {\r\n        setError('가입되지 않는 이메일입니다.');\r\n      } else if (error.code.includes('email-already-in-use')) {\r\n        setError('이미 사용 중인 이메일입니다.');\r\n      } else if (error.code.includes('too-many')) {\r\n        setError('로그인 실패. 비밀번호를 재설정해주세요.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => {\r\n    setNewAccount((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? '가입하기' : '로그인'}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? '로그인하기' : '이메일로 가입하기'}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from 'react';\r\nimport { authService } from 'fbase';\r\nimport { GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter, faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = ({ darkMode }) => {\r\n  const onSocialClick = async ({ target: { name } }) => {\r\n    let provider;\r\n    try {\r\n      if (name === 'google') {\r\n        provider = new GoogleAuthProvider();\r\n        await signInWithPopup(authService, provider);\r\n        // const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      } else if (name === 'github') {\r\n        provider = new GithubAuthProvider();\r\n        await signInWithPopup(authService, provider);\r\n        // const credential = GithubAuthProvider.credentialFromResult(result);\r\n        // const token = credential.accessToken;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={darkMode ? 'authContainer dark' : 'authContainer'}>\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'#9775fa'}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Google로 로그인{' '}\r\n          <FontAwesomeIcon icon={faGoogle} color={'#fff'} style={{ marginLeft: 2 }} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Github로 로그인{' '}\r\n          <FontAwesomeIcon icon={faGithub} color={'#fff'} style={{ marginLeft: 2 }} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","export function displayedAt(createdAt) {\r\n  const milliSeconds = new Date() - createdAt;\r\n  const seconds = milliSeconds / 1000;\r\n  if (seconds < 60) return `방금 전`;\r\n  const minutes = seconds / 60;\r\n  if (minutes < 60) return `${Math.floor(minutes)}분 전`;\r\n  const hours = minutes / 60;\r\n  if (hours < 24) return `${Math.floor(hours)}시간 전`;\r\n  const days = hours / 24;\r\n  if (days < 7) return `${Math.floor(days)}일 전`;\r\n  const weeks = days / 7;\r\n  if (weeks < 5) return `${Math.floor(weeks)}주 전`;\r\n  const months = days / 30;\r\n  if (months < 12) return `${Math.floor(months)}개월 전`;\r\n  const years = days / 365;\r\n  return `${Math.floor(years)}년 전`;\r\n}\r\n\r\n// export const getCreatedAt = () => {\r\n//   const month = new Date(sweetObj.createdAt).getMonth() + 1;\r\n//   const date = new Date(sweetObj.createdAt).getDate();\r\n//   const hour = new Date(sweetObj.createdAt).getHours();\r\n//   const min = new Date(sweetObj.createdAt).getMinutes();\r\n//   return `${displayedAt(sweetObj.createdAt)}`;\r\n// };\r\n","import { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { displayedAt } from 'utils/time';\r\n\r\nfunction SweetComment({\r\n  handleAddComment,\r\n  handleDeleteComment,\r\n  comment,\r\n  onChange,\r\n  comments,\r\n  userObj,\r\n}) {\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <div style={{ marginTop: 10 }}>\r\n        <form className=\"commentForm\" onSubmit={handleAddComment}>\r\n          <div className=\"commentInput__container\">\r\n            <input\r\n              className=\"commentInput__input\"\r\n              type=\"text\"\r\n              name=\"comment\"\r\n              value={comment}\r\n              onChange={onChange}\r\n              placeholder=\"댓글 달기\"\r\n              required\r\n            />\r\n            <input\r\n              className=\"commentInput__arrow\"\r\n              type=\"submit\"\r\n              value=\"&rarr;\"\r\n              onSubmit={handleAddComment}\r\n            />\r\n          </div>\r\n        </form>\r\n        <div className=\"comments\">\r\n          {comments.map((comment) => (\r\n            <div className=\"comment\" key={comment.createdAt}>\r\n              <div className=\"hello\">\r\n                <div className=\"info\">\r\n                  <span className=\"dname\">{comment.name || '♥'}</span>\r\n                  <span className=\"mini\">{displayedAt(comment.createdAt)}</span>\r\n                </div>\r\n                {comment.uid === userObj.uid && (\r\n                  <button\r\n                    className=\"delcommentBtn\"\r\n                    onClick={() => handleDeleteComment(comment.createdAt)}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"ctext\">{comment.text}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SweetComment;\r\n","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\r\nimport { ref, deleteObject } from '@firebase/storage';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTrash,\r\n  faPencilAlt,\r\n  faHeart,\r\n  faShare,\r\n  faComment,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { displayedAt } from 'utils/time';\r\nimport SweetComment from './SweetComment';\r\n\r\nconst Sweet = ({ userObj, sweetObj, isOwner, darkMode }) => {\r\n  const comments = sweetObj.comments.sort((a, b) => b.createdAt - a.createdAt);\r\n\r\n  const [text, setText] = useState({\r\n    sweet: sweetObj.text,\r\n    comment: '',\r\n  });\r\n  const { sweet, comment } = text;\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const [addComment, setAddComment] = useState(false);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('스윗을 삭제하시겠습니까?');\r\n    // console.log(ok);\r\n    if (ok) {\r\n      // delete sweet\r\n      // await deleteDoc(doc(dbService, 'sweets', sweetObj.id));\r\n      await deleteDoc(doc(dbService, `sweets/${sweetObj.id}`));\r\n      if (sweetObj.attachmentUrl !== '') {\r\n        await deleteObject(ref(storageService, sweetObj.attachmentUrl));\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleEditing = (e) => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('sweetObj', sweetObj, '/ newSweet', sweet);\r\n    await updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n      text: sweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setText({\r\n      ...text,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const like = async () => {\r\n    const iLike = sweetObj.likes.includes(userObj.uid);\r\n    if (!iLike) {\r\n      await updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n        likes: [...sweetObj.likes, userObj.uid],\r\n      });\r\n    } else {\r\n      await updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n        likes: sweetObj.likes.filter((user) => user !== userObj.uid),\r\n      });\r\n    }\r\n  };\r\n\r\n  const getCount = (name) => {\r\n    let count = 0;\r\n    if (name === 'likes') {\r\n      for (let i = 0; i < sweetObj.likes.length; i++) {\r\n        count += 1;\r\n      }\r\n      return count;\r\n    } else if (name === 'comments') {\r\n      for (let i = 0; i < sweetObj.comments.length; i++) {\r\n        count += 1;\r\n      }\r\n      return count;\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async (e) => {\r\n    e.preventDefault();\r\n    if (comment !== '') {\r\n      await updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n        comments: [\r\n          ...sweetObj.comments,\r\n          {\r\n            uid: userObj.uid,\r\n            createdAt: Date.now(),\r\n            name: userObj.displayName,\r\n            text: comment,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n    setText({\r\n      ...text,\r\n      comment: '',\r\n    });\r\n  };\r\n\r\n  const handleDeleteComment = async (cid) => {\r\n    if (!window.confirm('댓글을 삭제하시겠습니까?')) return;\r\n    // console.log('comment', uid, 'delete comment createdAt', cid);\r\n\r\n    // 삭제하려는 문서 id(cid)의 uid가 나의 아이디(uid)와 같을 때\r\n    await updateDoc(doc(dbService, `sweets/${sweetObj.id}`), {\r\n      comments: sweetObj.comments.filter((comment) => comment.createdAt !== cid),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={darkMode ? 'sweet dark' : 'sweet'}>\r\n      {editing ? (\r\n        <>\r\n          <form className=\"container sweetEdit\" onSubmit={onSubmit}>\r\n            <input\r\n              className=\"formInput\"\r\n              type=\"text\"\r\n              placeholder=\"스윗 수정하기\"\r\n              name=\"sweet\"\r\n              required\r\n              autoFocus\r\n              value={sweet}\r\n              onChange={onChange}\r\n            />\r\n            <input type=\"submit\" value=\"스윗 업데이트\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={(prev) => setEditing(!prev)} className=\"formBtn cancelBtn\">\r\n            취소\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"hello\">\r\n            <div className=\"info\">\r\n              <span className=\"dname\">{sweetObj.dName || '♥'}</span>\r\n              <span className=\"mini\">{displayedAt(sweetObj.createdAt)}</span>\r\n            </div>\r\n            {isOwner && (\r\n              <div className=\"sweet__actions\">\r\n                <span onClick={onDeleteClick}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                  <FontAwesomeIcon icon={faPencilAlt} />\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <span className=\"sweet__text\">{sweetObj.text}</span>\r\n          {sweetObj.attachmentUrl && <img alt=\"img\" src={sweetObj.attachmentUrl} />}\r\n          <>\r\n            <div className=\"bottom\">\r\n              <button onClick={like}>\r\n                <FontAwesomeIcon\r\n                  icon={faHeart}\r\n                  style={{\r\n                    color: sweetObj.likes.includes(userObj.uid) && '#e05d5d',\r\n                  }}\r\n                />\r\n                <span>{' ' + getCount('likes')}</span>\r\n              </button>\r\n              <button onClick={() => setAddComment(!addComment)}>\r\n                <FontAwesomeIcon icon={faComment} />\r\n                <span>{' ' + getCount('comments')}</span>\r\n              </button>\r\n              <button\r\n                title=\"트위터에 공유하기\"\r\n                onClick={() => {\r\n                  const thisUrl = document.URL;\r\n                  const snsTitle = 'Switter';\r\n                  var url =\r\n                    'http://twitter.com/share?url=' +\r\n                    encodeURIComponent(thisUrl) +\r\n                    '&text=' +\r\n                    encodeURIComponent(snsTitle);\r\n                  window.open(url, 'tweetPop', 'width=486, height=286,scrollbars=yes');\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faShare} />\r\n              </button>\r\n            </div>\r\n            {/* comments */}\r\n            {addComment && (\r\n              <SweetComment\r\n                addComment={addComment}\r\n                handleAddComment={handleAddComment}\r\n                handleDeleteComment={handleDeleteComment}\r\n                comment={comment}\r\n                onChange={onChange}\r\n                comments={comments}\r\n                userObj={userObj}\r\n              />\r\n            )}\r\n          </>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sweet;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { addDoc, collection } from 'firebase/firestore';\r\nimport { ref, uploadString, getDownloadURL } from '@firebase/storage';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SweetFactory = ({ userObj, darkMode }) => {\r\n  // console.log('SweetFactory userObj', userObj);\r\n  const [sweet, setSweet] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n\r\n  const onSubmit = async (e) => {\r\n    if (sweet === '') {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      // 파일 경로 참조 만들기\r\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      // storage 참조 경로로 파일 업로드 하기\r\n      const uploadFile = await uploadString(fileRef, attachment, 'data_url');\r\n      console.log(uploadFile);\r\n      // storage에 있는 파일 URL로 다운로드 받기\r\n      attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n    }\r\n\r\n    // 트윗할 때, 메시지와 사진도 같이 firestore에 생성\r\n    const sweetObj = {\r\n      text: sweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n      dName: userObj.displayName,\r\n      email: userObj.email,\r\n      likes: [],\r\n      comments: [],\r\n    };\r\n    await addDoc(collection(dbService, 'sweets'), sweetObj);\r\n    setSweet('');\r\n    setAttachment('');\r\n  };\r\n\r\n  const onChange = ({ target: { value } }) => {\r\n    setSweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader(); // fileReader API 파일 이름을 읽음\r\n    reader.onloadend = (finishedEvent) => {\r\n      // console.log('finishedEvent', finishedEvent);\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment('');\r\n\r\n  return (\r\n    <form\r\n      onSubmit={onSubmit}\r\n      className={darkMode ? 'factoryForm dark' : 'factoryForm'}\r\n    >\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={sweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"무슨 달콤한 생각을 하고 있나요?\"\r\n          maxLength={120}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"&rarr;\"\r\n          className=\"factoryInput__arrow\"\r\n          onSubmit={onsubmit}\r\n        />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>사진 선택하기</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            alt=\"img\"\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>제거하기</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SweetFactory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  collection,\r\n  getFirestore,\r\n  onSnapshot,\r\n  orderBy,\r\n  query,\r\n} from 'firebase/firestore';\r\nimport Sweet from 'components/Sweet';\r\nimport SweetFactory from 'components/SweetFactory';\r\n\r\nconst Home = ({ userObj, darkMode }) => {\r\n  // console.log('Home userObj', userObj);\r\n  const [sweets, setSweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // onSnapshot은 데이터베이스의 변화를 실시간으로 알려주는 기능\r\n    // 실시간으로 데이터를 데이터베이스에서 가져오기 (쿼리 스냅샷 차이)\r\n    // snapshot은 우리가 가진 query와 같은 것 docs를 갖고 있음\r\n    const q = query(\r\n      collection(getFirestore(), 'sweets'),\r\n      orderBy('createdAt', 'desc')\r\n    );\r\n\r\n    const unsubscribe = onSnapshot(q, (snapshot) => {\r\n      // console.log('something happened-read, delete, update..');\r\n      const sweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        likes: doc.data().likes,\r\n        comments: doc.data().comments,\r\n        ...doc.data(),\r\n      }));\r\n      setSweets(sweetArray);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={darkMode ? 'container dark' : 'container'}>\r\n      <SweetFactory userObj={userObj} darkMode={darkMode} />\r\n      <div style={{ marginTop: 30 }} className=\"sweet-container\">\r\n        {sweets.map((sweet) => (\r\n          <Sweet\r\n            key={sweet.id}\r\n            userObj={userObj}\r\n            sweetObj={sweet}\r\n            isOwner={sweet.creatorId === userObj.uid}\r\n            darkMode={darkMode}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n  faEllipsisH,\r\n  faEnvelope,\r\n  faHome,\r\n  faMoon,\r\n  faUser,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj, darkMode, onDarkMode }) => {\r\n  return (\r\n    <nav className={darkMode ? 'nav dark' : 'nav'}>\r\n      {/* <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}> */}\r\n      <ul style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <li className=\"logo\">\r\n          <NavLink to=\"/\" className=\"navlink\" activeClassName=\"\">\r\n            <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\r\n            <span>♥</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"home\">\r\n          <NavLink to=\"/\" className=\"navlink\" activeClassName=\"\">\r\n            <FontAwesomeIcon icon={faHome} size=\"2x\" />\r\n            <span>home</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"profile\">\r\n          <NavLink className=\"navlink\" activeClassName=\"\" to=\"/profile\">\r\n            <FontAwesomeIcon icon={faUser} size=\"2x\" />\r\n            <span>{userObj.displayName ? `${userObj.displayName}` : '♥'}</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"msg\">\r\n          <NavLink to=\"/msg\" className=\"navlink\" activeClassName=\"active\">\r\n            <FontAwesomeIcon icon={faEnvelope} size=\"2x\" />\r\n            <span>{'+1'}</span>\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"dark navlink\" onClick={onDarkMode}>\r\n          <FontAwesomeIcon\r\n            icon={faMoon}\r\n            size=\"2x\"\r\n            color={darkMode ? '#e9c77b' : '#000000cc'}\r\n          />\r\n          <span>{darkMode ? 'light' : 'dark'}</span>\r\n        </li>\r\n        <li className=\"more navlink\">\r\n          <FontAwesomeIcon icon={faEllipsisH} size=\"2x\" />\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { authService } from 'fbase';\r\nimport { signOut, updateProfile } from '@firebase/auth';\r\n// import { collection, getDocs, orderBy, query, where } from '@firebase/firestore';\r\n\r\nconst Profile = ({ refreshUser, userObj, darkMode }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n  const onLogOutClick = () => {\r\n    signOut(authService); // auth.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const onChange = ({ target: { value } }) => {\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  // updateProfile 2 update - displayName, photoURL\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName,\r\n        // photoURL: 'https://example.com/jane-q-user/profile.jpg',\r\n      })\r\n        .then(() => {\r\n          // Profile updated!\r\n          refreshUser();\r\n        })\r\n        .catch((error) => {\r\n          // An error occurred\r\n        });\r\n    }\r\n  };\r\n\r\n  // const getMySweets = async () => {\r\n  //   const q = query(\r\n  //     collection(dbService, 'sweets'),\r\n  //     where('creatorId', '==', userObj.uid) // 필터링\r\n  //   );\r\n  //   const querySnapshot = await getDocs(q);\r\n  //   querySnapshot.forEach((doc) => {\r\n  //     console.log(doc.id, ' => ', doc.data());\r\n  //   });\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getMySweets();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <div style={{ fontWeight: 'bold' }}>{userObj.displayName}</div>\r\n      <div>{userObj.email}</div> */}\r\n      <form onSubmit={onSubmit} className={darkMode ? 'profileForm dark' : 'profileForm'}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName || ''}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"프로필 업데이트\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn logOut\" onClick={onLogOutClick}>\r\n        로그아웃\r\n      </span>\r\n    </div>\r\n    // <>\r\n    //   <form onSubmit={onSubmit}>\r\n    //     <input\r\n    //       onChange={onChange}\r\n    //       type=\"test\"\r\n    //       placeholder=\"Display name\"\r\n    //       value={newDisplayName}\r\n    //     />\r\n    //     <input type=\"submit\" value=\"Updata Profile\" />\r\n    //   </form>\r\n    //   <button onClick={onLogOutClick}>Log Out</button>\r\n    // </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\n\r\nconst msgArr = [\r\n  '누군가를 사랑하고자 한다면 너 자신을 먼저 사랑해야 해',\r\n  '앞이 보이지 않을 때는 지금 할 수 있는 일을 하면 돼',\r\n  '진정한 아름다움은 내면에 있어',\r\n  '그렇게 구경만 하다가는 네 인생이 너 없이 흘러가는 걸 구경하게 될걸',\r\n  '마음만을 가지고 있어서는 안 된다. 반드시 실천해야 한다',\r\n  '소심해질 시간 없어 용감하고 대담하게 해',\r\n  '기억해 너는 세상을 빛으로 가득 채울 수 있는 존재란 걸',\r\n  '사랑은 누군가를 나보다 먼저 두는 거야',\r\n  '용기를 내',\r\n  '행운을 빌어',\r\n  '너에게는 아직 꿈을 이루기 위한 충분한 시간이 있어',\r\n  '힘내. 인생은 한순간에 바뀌기도 하는 거니까',\r\n  '큰 희망이 큰 사람을 만든다',\r\n  '가끔은 옳은 길이 가장 쉬운 길이 아닐 때도 있지',\r\n  '절대로 고개를 떨구지 말라 고개를 치켜들고 세상을 똑바로 보라',\r\n  '시간은 아무도 기다려주지 않아',\r\n  '아름다움은 사라져 버리지만 마음에서 우러나는 것은 사라지지 않아. 유머, 친절함, 용기',\r\n  '중요한 건 겉모습이 아닌 마음이야',\r\n  '간절히 바라는 마음이 있어야 마법이 일어날 수 있어',\r\n  '역경을 이겨내고 핀 꽃이 가장 아름다운 꽃이란다',\r\n  '눈을 감지 말고 똑바로 봐. 두려움의 실체는 생각과 다를 수 있어',\r\n];\r\n\r\nconst Message = ({ userName }) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [msg, setMsg] = useState(`${userName || 'hey'} 클릭해봐 :)`);\r\n\r\n  const onOpen = () => setOpen(!open);\r\n\r\n  const randomMsg = () => setMsg(msgArr[Math.floor(Math.random() * msgArr.length)]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"msg-container\">\r\n        <div className=\"msgh\">\r\n          <span>Message</span>\r\n        </div>\r\n\r\n        {open ? (\r\n          <div className=\"msgs\" onClick={onOpen}>\r\n            <div className=\"chat\">\r\n              <div style={{ fontWeight: 'bold', marginBottom: 12 }}>\r\n                <FontAwesomeIcon icon={faUser} /> {'익명'}\r\n              </div>\r\n              <span>{msg}</span>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"back\" onClick={onOpen}>\r\n              {open ? '' : '←'}\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                padding: 20,\r\n              }}\r\n            >\r\n              <div style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faUser} color=\"black\" />\r\n              </div>\r\n              <div className=\"mymsg\" onClick={randomMsg}>\r\n                <span>{msg}</span>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\nimport Message from 'components/Message';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj, darkMode, onDarkMode }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <>\r\n          <div className={darkMode ? 'test dark' : 'test'}>\r\n            <div className={darkMode ? 'left dark' : 'left'}>\r\n              {isLoggedIn && (\r\n                <Navigation\r\n                  userObj={userObj}\r\n                  darkMode={darkMode}\r\n                  onDarkMode={onDarkMode}\r\n                />\r\n              )}\r\n            </div>\r\n            {isLoggedIn ? (\r\n              <div className={darkMode ? 'right dark' : 'right'}>\r\n                <Route exact path=\"/\">\r\n                  <Home userObj={userObj} darkMode={darkMode} onDarkMode={onDarkMode} />\r\n                </Route>\r\n                <Route exact path=\"/profile\">\r\n                  <Profile\r\n                    userObj={userObj}\r\n                    refreshUser={refreshUser}\r\n                    darkMode={darkMode}\r\n                  />\r\n                </Route>\r\n                <Route exact path=\"/msg\">\r\n                  <Message userName={userObj.displayName} />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Route exact path=\"/\">\r\n                  <Auth darkMode={darkMode} />\r\n                </Route>\r\n                <Redirect from=\"*\" to=\"/\" />\r\n              </>\r\n            )}\r\n          </div>\r\n        </>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useState, useEffect } from 'react';\nimport AppRouter from './Router';\nimport { authService } from 'fbase';\nimport { onAuthStateChanged } from 'firebase/auth';\n\nfunction App() {\n  // console.log('유저의 로그인 여부', authService.currentUser);\n  const [init, setInit] = useState(false); // flase면 router 숨기기\n  // userObj의 제일 처음 출발점!\n  const [userObj, setUserObj] = useState(null);\n  const [darkMode, setDarkMode] = useState(false);\n\n  // 처음 시작할 때. 컴포넌트가 mount 될 때\n  useEffect(() => {\n    // 사용자의 로그인 상태의 변화를 관찰하는 관찰자 추가\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        // setUserObj(user);\n        setUserObj({\n          email: user.email,\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        // User is signed out\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  // firebase의 정보를 가지고 react를 업데이트\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      email: user.email,\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  const onDarkMode = () => {\n    darkMode\n      ? (document.body.style = 'background-color: #fff8e5')\n      : (document.body.style = 'background-color: #193446');\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n          darkMode={darkMode}\n          onDarkMode={onDarkMode}\n        />\n      ) : (\n        <div style={{ marginTop: 10 }}>Initializing....</div>\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Switter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}